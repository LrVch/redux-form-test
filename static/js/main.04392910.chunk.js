(window["webpackJsonpredux-form-test"]=window["webpackJsonpredux-form-test"]||[]).push([[0],{183:function(e,n,t){e.exports=t(361)},242:function(e,n,t){},243:function(e,n,t){},331:function(e,n,t){},332:function(e,n,t){},336:function(e,n,t){},337:function(e,n,t){},357:function(e,n,t){},358:function(e,n,t){},361:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),i=t(21),l=t.n(i),o=t(69),m=t(179),s=t(180),c=t(14),u=t(11),d=t(170),b=t(373),p=t(42),g=t(171),f=t(172),v="/".concat("redux-form-test"),h=function(){function e(){Object(g.a)(this,e)}return Object(f.a)(e,null,[{key:"changeTheme",value:function(e){var n=this;return this.stylePrevRef=this.styleRef,this.styleRef=document.createElement("link"),this.styleRef.rel="stylesheet",this.styleRef.type="text/css",document.head.appendChild(this.styleRef),new Promise((function(t,a){n.styleRef.href="".concat(v,"/styles/prismjs/themes/").concat(e,".css"),n.styleRef.onload=function(){n.stylePrevRef&&document.head.removeChild(n.stylePrevRef),setTimeout((function(){t(e)}))},n.styleRef.onerror=function(){return a()}}))}}]),e}();h.styleRef=null,h.stylePrevRef=null;function y(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function E(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?y(t,!0).forEach((function(n){Object(p.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):y(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var N={colors:["Red","Orange","Yellow","Green","Blue","Indigo","Violet"],account:{},context:{requiredNickname:!0}},x=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:N,n=arguments.length>1?arguments[1]:void 0,t=n.type,a=n.payload;switch(t){case"USER_DATA_SUCCESS":var r=a.account;return E({},e,{account:r});case"USER_CLUB_INFO_SUCCESS":var i=a.clubInfo;return E({},e,{clubInfo:i});case"USER_TOGGLE_REQUIRED_NICKNAME":return E({},e,{context:E({},e.context,{requiredNickname:a})});default:return e}};function F(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function S(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?F(t,!0).forEach((function(n){Object(p.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):F(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var R={theme:"prism-okaidia",prismShowLoader:!1},O=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:R,n=arguments.length>1?arguments[1]:void 0,t=n.type,a=n.payload;switch(t){case"UI_CHANGE_THEME":var r=a.theme;return S({},e,{theme:r});case"UI_PRISM_SHOW_LOADER":return S({},e,{prismShowLoader:!0});case"UI_PRISM_HIDE_LOADER":return S({},e,{prismShowLoader:!1});default:return e}},w=Object(u.combineReducers)({form:b.a,user:x,ui:O}),q=t(174);t(242),t(243);var k=t(371),C=t(368),V=t(6),$=(t(118),t(175),function(e){console.log("=".repeat(20)),console.log(JSON.stringify(e,null,4)),console.log("=".repeat(20))}),A=t(90),L=t.n(A);function j(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function I(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?j(t,!0).forEach((function(n){Object(p.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):j(t).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var M=function(e){return function(n,t){var a=t.context||{};try{return e.validateSync(n,{abortEarly:!1,context:a}),{}}catch(i){var r={};return i.inner.forEach((function(e){/\$/.test(e.path)?/\$$/.test(e.path)?L()(r,e.path+"[_error]",e.message):/\$\[\d+\]/.test(e.path)&&L()(r,e.path,e.message):L()(r,e.path,e.message)})),r}}},U=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Required";return function(n){return n?void 0:e}},_=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Must be ${min} characters or more";return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",a=new RegExp("\\${min}","gi"),r=new RegExp("\\${value}","gi"),i=new RegExp("\\${length}","gi");return t.length<e?n.replace(a,e).replace(r,t).replace(i,t.length):void 0}},D=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Must be at least ${min}";return function(t){var a=new RegExp("\\${min}","gi"),r=new RegExp("\\${value}","gi");return t&&t<e?n.replace(a,e).replace(r,t):void 0}},P=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"You do not meet the minimum age requirement!";return function(t){var a=new RegExp("\\${age}","gi");return t&&t<e?n.replace(a,e):void 0}},H=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Really? You still use AOL for your email?";return function(n){return n&&/.+@aol\.com/.test(n)?e:void 0}},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Only alphanumeric characters";return function(n){return n&&/[^a-zA-Z0-9 ]/i.test(n)?e:void 0}},B=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"+7 (XXX) XXX-XX-XX",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Invalid phone number, a format of a phone number must be ${pattern} ";return function(t){var a=new RegExp("\\${pattern}","gi");return t&&!/^(\+7 \([0-9]{3}\)\s[0-9]{3}-[0-9]{2}-[0-9]{2})$/i.test(t)?n.replace(a,e):void 0}},Y=function(e,n,t,a){return console.log(t),(r=1e3,new Promise((function(e){return setTimeout(e,r)}))).then((function(){"username"===a&&function(e,n){if(["john","paul","george","ringo"].includes(e))throw I({},n.asyncErrors,{username:"That username is taken"})}(e.username,t),"email"===a&&function(e,n){if(["john@mail.com","paul@mail.com","george@mail.com","ringo@mail.com"].includes(e))throw I({},n.asyncErrors,{email:"That email is already taken"})}(e.email,t),"age"===a&&function(e,n){if(e<16)throw I({},n.asyncErrors,{age:"You are too young :("})}(e.age,t)}));var r},z={firstName:"Jane",lastName:"Doe",age:"42",anniversaryDate:"2018-08-22",sex:"female",employed:!0,favoriteColor:"Blue",bio:"Born to write amazing Redux code."},W={clubName:"Some club in the hood",members$:[{firstName:"Jane",lastName:"Doe",hobbies$:["reading","swimming"]},{firstName:"Sam",lastName:" Peterson",hobbies$:["sport","running","writing"]}]},G=function(e){var n=e.children,t=e.input,i=e.label,l=e.meta,o=l.asyncValidating,m=l.touched,s=l.error,c=l.warning,u=e.noValidate,d=e.onDestoy,b=e.type,p=e.blockInput,g=/radio|checkbox/.test(b),f="select"===b,v=/file|password|^text$|email|number|radio|checkbox/.test(b),h="radio"===b,y="textarea"===b,E=!u&&m&&s,N=!u&&m&&c&&!E,x=!u&&m&&!E,F=Math.random(32).toString().slice(2);return Object(a.useEffect)((function(){return function(){d&&d()}}),[d]),r.a.createElement("div",{className:(o?" async-validating ":"")+" form-group "+(g?" form-check ":"")},!g&&r.a.createElement("label",{htmlFor:F},i),r.a.createElement("div",{style:{position:"relative"}},p&&r.a.createElement("div",{style:{position:"absolute",left:0,right:0,top:0,bottom:0,zIndex:9999}}),v&&r.a.createElement("input",Object.assign({id:F,className:(!h&&E?" is-invalid ":" ")+(!h&&x?" is-valid ":" ")+(g?" form-check-input ":" form-control ")+" bg-transparent "},t,{placeholder:i,type:b})),f&&r.a.createElement("select",Object.assign({id:F,className:(E?" is-invalid ":" ")+(x?" is-valid ":" ")+" form-control "},t),n),y&&r.a.createElement("textarea",Object.assign({id:i,className:(E?" is-invalid ":" ")+(x?" is-valid ":" ")+" form-control "},t)),g&&r.a.createElement("label",{className:"form-check-label",htmlFor:F},i),r.a.createElement("div",{className:"spinner-border",role:"status"},r.a.createElement("span",{className:"sr-only"},"Loading...")),!h&&E&&r.a.createElement("div",{className:"invalid-feedback"},s),!h&&N&&r.a.createElement("small",null,c)))},X=V.object().shape({username:V.string().required("Required").max(15,"Must be ${max} characters or less"),email:V.string().required("Required").email("Invalid email address"),age:V.number().typeError("Only number is acceptable").required("Required").positive("Only positive number is acceptable").integer("Only integer number is acceptable").min(18,"Sorry, you must be at least 18 years old")}),Z=V.object().shape({age:V.number().min(19,"Hmm, you seem a bit young...")}),J=Object(C.a)({form:"syncValidationYup",validate:M(X),warn:M(Z),forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),K="\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport * as yup from 'yup';\nimport { /*asyncValidator,*/ syncValidator } from '../../utils'\nimport {  RenderField } from '../shared'\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Required')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, 'Must be ${max} characters or less'),\n  email: yup\n    .string()\n    .required('Required')\n    .email('Invalid email address'),\n  age: yup\n    .number()\n    .typeError('Only number is acceptable')\n    .required('Required')\n    .positive('Only positive number is acceptable')\n    .integer('Only integer number is acceptable')\n    .min(18, 'Sorry, you must be at least 18 years old')\n});\n\nconst warningSchema = yup.object().shape({\n  age: yup\n    .number()\n    .min(19, 'Hmm, you seem a bit young...')\n})\n\n\n\nconst SyncValidationFormYup = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"username\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Username\"\n        />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"email\"\n          type=\"email\"\n          component={RenderField}\n          label=\"Email\" />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"age\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Age\" />\n      </div>\n\n      <div>\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'syncValidationYup',\n  validate: syncValidator(validationSchema),\n  warn: syncValidator(warningSchema)\n  // asyncValidate: asyncValidator(schema)\n})(SyncValidationFormYup)\n",Q=Object(C.a)({form:"simple",forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{className:"mt-3",noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"form-group"},r.a.createElement("label",{htmlFor:"firstName"},"First Name"),r.a.createElement(k.a,{id:"firstName",placeholder:"First Name",className:"form-control",name:"firstName",component:"input",type:"text"})),r.a.createElement("div",{className:"form-group mt-3"},r.a.createElement("label",{htmlFor:"lastName"},"Last Name"),r.a.createElement(k.a,{id:"lastName",placeholder:"Last Name",className:"form-control",name:"lastName",component:"input",type:"text"})),r.a.createElement("div",{className:"form-group mt-3"},r.a.createElement("label",{htmlFor:"email"},"Email"),r.a.createElement(k.a,{id:"email",placeholder:"Email",className:"form-control",name:"email",component:"input",type:"email"})),r.a.createElement("div",null,r.a.createElement("label",null,"Sex"),r.a.createElement("div",{className:"form-group form-check"},r.a.createElement(k.a,{id:"male",className:"form-check-input",name:"sex",component:"input",type:"radio",value:"male"}),r.a.createElement("label",{className:"form-check-label",htmlFor:"male"},"Male")),r.a.createElement("div",{className:"form-group form-check"},r.a.createElement(k.a,{id:"female",className:"form-check-input",name:"sex",component:"input",type:"radio",value:"female"}),r.a.createElement("label",{className:"form-check-label",htmlFor:"female"},"Female")),r.a.createElement("div",{className:"form-group form-check"},r.a.createElement(k.a,{id:"other",className:"form-check-input",name:"sex",component:"input",type:"radio",value:"other"}),r.a.createElement("label",{className:"form-check-label",htmlFor:"other"},"Other"))),r.a.createElement("div",{className:"form-group mt-3"},r.a.createElement("label",{htmlFor:"favoriteColor"},"Favorite Color"),r.a.createElement("div",null,r.a.createElement(k.a,{className:"form-control",id:"favoriteColor",name:"favoriteColor",component:"select"},r.a.createElement("option",null),r.a.createElement("option",{value:"ff0000"},"Red"),r.a.createElement("option",{value:"00ff00"},"Green"),r.a.createElement("option",{value:"0000ff"},"Blue")))),r.a.createElement("div",{className:"form-group form-check"},r.a.createElement(k.a,{id:"employed",className:"form-check-input",name:"employed",component:"input",type:"checkbox"}),r.a.createElement("label",{className:"form-check-label",htmlFor:"employed"},"Employed")),r.a.createElement("div",{className:"form-group"},r.a.createElement("label",{htmlFor:"notes"},"Notes"),r.a.createElement("div",null,r.a.createElement(k.a,{className:"form-control",id:"notes",name:"notes",component:"textarea"}))),r.a.createElement("div",{className:"mt-3"},r.a.createElement("button",{type:"submit",disabled:t||i,className:"btn btn-secondary"},"Submit"),r.a.createElement("button",{type:"submit",disabled:t||i,onClick:a,className:"btn btn-light ml-3"},"Clear")))})),ee='\nimport React from \'react\'\nimport { Field, reduxForm } from \'redux-form\'\n\nconst SimpleForm = ({ handleSubmit, pristine, reset, submitting }) => {\n  return <form\n    className="mt-3"\n    noValidate\n    onSubmit={handleSubmit}>\n\n    <div className="form-group">\n      <label htmlFor="firstName">First Name</label>\n      <Field\n        id="firstName"\n        placeholder="First Name"\n        className="form-control"\n        name="firstName"\n        component="input"\n        type="text"\n      />\n    </div>\n\n    <div className="form-group mt-3">\n      <label htmlFor="lastName">Last Name</label>\n      <Field\n        id="lastName"\n        placeholder="Last Name"\n        className="form-control"\n        name="lastName"\n        component="input"\n        type="text" />\n    </div>\n\n    <div className="form-group mt-3">\n      <label htmlFor="email">Email</label>\n      <Field\n        id="email"\n        placeholder="Email"\n        className="form-control"\n        name="email"\n        component="input"\n        type="email" />\n    </div>\n\n    <div >\n      <label>Sex</label>\n      <div className="form-group form-check">\n        <Field\n          id="male"\n          className="form-check-input"\n          name="sex"\n          component="input"\n          type="radio"\n          value="male" />\n        <label\n          className="form-check-label"\n          htmlFor="male">Male</label>\n      </div>\n      <div className="form-group form-check">\n        <Field\n          id="female"\n          className="form-check-input"\n          name="sex"\n          component="input"\n          type="radio"\n          value="female" />\n        <label\n          className="form-check-label"\n          htmlFor="female">Female</label>\n      </div>\n      <div className="form-group form-check">\n        <Field\n          id="other"\n          className="form-check-input"\n          name="sex"\n          component="input"\n          type="radio"\n          value="other" />\n        <label\n          className="form-check-label"\n          htmlFor="other">Other</label>\n      </div>\n    </div>\n\n    <div className="form-group mt-3">\n      <label htmlFor="favoriteColor">Favorite Color</label>\n      <div>\n        <Field\n          className="form-control"\n          id="favoriteColor"\n          name="favoriteColor"\n          component="select">\n          <option />\n          <option value="ff0000">Red</option>\n          <option value="00ff00">Green</option>\n          <option value="0000ff">Blue</option>\n        </Field>\n      </div>\n    </div>\n\n    <div className="form-group form-check">\n      <Field\n        id="employed"\n        className="form-check-input"\n        name="employed"\n        component="input"\n        type="checkbox" />\n      <label\n        className="form-check-label"\n        htmlFor="employed">Employed</label>\n    </div>\n\n    <div className="form-group">\n      <label htmlFor="notes">Notes</label>\n      <div>\n        <Field\n          className="form-control"\n          id="notes"\n          name="notes"\n          component="textarea" />\n      </div>\n    </div>\n\n    <div className="mt-3">\n      <button\n        type="submit"\n        disabled={pristine || submitting}\n        className="btn btn-secondary">Submit</button>\n\n      <button\n        type="submit"\n        disabled={pristine || submitting} onClick={reset}\n        className="btn btn-light ml-3">Clear</button>\n    </div>\n  </form>\n}\n\nexport default reduxForm({\n  form: \'simple\',\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false\n})(SimpleForm)\n\n',ne=Object(C.a)({form:"syncValidation",validate:function(e){var n={};return e.username?e.username.length>15&&(n.username="Must be 15 characters or less"):n.username="Required",e.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.email)||(n.email="Invalid email address"):n.email="Required",e.age?isNaN(Number(e.age))?n.age="Must be a number":Number(e.age)<18&&(n.age="Sorry, you must be at least 18 years old"):n.age="Required",n},warn:function(e){var n={};return e.age<19&&(n.age="Hmm, you seem a bit young..."),n},forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"number",component:G,label:"Age"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),te='\nimport React from \'react\'\nimport { Field, reduxForm } from \'redux-form\'\nimport {  RenderField } from \'../shared\'\n\nconst validate = values => {\n  const errors = {}\n  if (!values.username) {\n    errors.username = \'Required\'\n  } else if (values.username.length > 15) {\n    errors.username = \'Must be 15 characters or less\'\n  }\n  if (!values.email) {\n    errors.email = \'Required\'\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \'Invalid email address\'\n  }\n  if (!values.age) {\n    errors.age = \'Required\'\n  } else if (isNaN(Number(values.age))) {\n    errors.age = \'Must be a number\'\n  } else if (Number(values.age) < 18) {\n    errors.age = \'Sorry, you must be at least 18 years old\'\n  }\n  return errors\n}\n\nconst warn = values => {\n  const warnings = {}\n  if (values.age < 19) {\n    warnings.age = \'Hmm, you seem a bit young...\'\n  }\n  return warnings\n}\n\nconst SyncValidationForm = ({handleSubmit, pristine, reset, submitting}) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n      <div className="mt-3">\n        <Field\n          name="username"\n          type="text"\n          component={RenderField}\n          label="Username"\n        />\n      </div>\n      <div className="mt-3">\n        <Field name="email" type="email" component={RenderField} label="Email" />\n      </div>\n      <div className="mt-3">\n        <Field name="age" type="number" component={RenderField} label="Age" />\n      </div>\n      <div>\n        <button type="submit" className="btn btn-secondary" disabled={submitting}>\n          Submit\n        </button>\n        <button type="button" className="btn btn-light ml-3" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: \'syncValidation\',\n  validate,\n  warn,\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false\n})(SyncValidationForm)\n',ae=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Must be ${max} characters or less";return function(t){var a=new RegExp("\\${max}","gi"),r=new RegExp("\\${value}","gi"),i=new RegExp("\\${length}","gi");return t&&t.length>e?n.replace(a,e).replace(r,t).replace(i,t.length):void 0}}(15,"Must be ${max} characters or less, current length is ${length} and the current value is ' ${value}'"),re=_(2,"Must be ${min} characters or more, current length is ${length} and the current value is ' ${value}'"),ie=U("Username is required"),le=T("Only alphanumeric characters in username are allowed"),oe=U("Phone number is required"),me=B(),se=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Invalid email address";return function(n){return n&&!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(n)?e:void 0}}(),ce=H(),ue=U("Email is required"),de=D(13),be=P(16,"You have met the minimum age requirement! But it's better to be ${age}"),pe=U("Age is required"),ge=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Must be a number";return function(n){var t=new RegExp("\\${value}","gi");return n&&isNaN(Number(n))?e.replace(t,n):void 0}}(),fe=Object(C.a)({form:"fieldLevelValidation",forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username",validate:[ie,ae,re],warn:le})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email",validate:[ue,se],warn:ce})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age",validate:[pe,ge,de],warn:be})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"phone",type:"text",component:G,label:"Phone number",validate:[oe,me]})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),ve='\nimport React from \'react\'\nimport { Field, reduxForm } from \'redux-form\'\nimport { RenderField } from \'../shared\'\nimport {\n  alphaNumeric,\n  aol,\n  email,\n  maxLength,\n  minLength,\n  russianPhoneNumberPattern,\n  minValue,\n  number,\n  required,\n  tooYoung\n} from \'../../utils\'\n\n// eslint-disable-next-line no-template-curly-in-string\nconst maxLength15 = maxLength(15, \'Must be ${max} characters or less, current length is ${length} and the current value is \' ${value}\'\')\n// eslint-disable-next-line no-template-curly-in-string\nconst minLength2 = minLength(2, \'Must be ${min} characters or more, current length is ${length} and the current value is \' ${value}\'\')\nconst userNameRequired = required(\'Username is required\')\nconst userNameAlphaNumeric = alphaNumeric(\'Only alphanumeric characters in username are allowed\')\nconst phoneNumberRequired = required(\'Phone number is required\')\nconst userRussianPhoneNumberPattern = russianPhoneNumberPattern()\nconst userEmail = email()\nconst userDeprecetedMail = aol()\nconst userEmailRequired = required(\'Email is required\')\nconst minValue13 = minValue(13)\n// eslint-disable-next-line no-template-curly-in-string\nconst userTooYoung = tooYoung(16, \'You have met the minimum age requirement! But it\'s better to be ${age}\')\nconst userAgeRequired = required(\'Age is required\')\nconst ageNumber = number()\n\n\nconst FieldLevelValidation = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n\n      <div className="mt-3">\n        <Field\n          name="username"\n          type="text"\n          component={RenderField}\n          label="Username"\n          validate={[userNameRequired, maxLength15, minLength2]}\n          warn={userNameAlphaNumeric}\n        />\n      </div>\n\n      <div className="mt-3">\n        <Field\n          name="email"\n          type="email"\n          component={RenderField}\n          label="Email"\n          validate={[userEmailRequired, userEmail]}\n          warn={userDeprecetedMail} />\n      </div>\n\n      <div className="mt-3">\n        <Field\n          name="age"\n          type="text"\n          component={RenderField}\n          label="Age"\n          validate={[userAgeRequired, ageNumber, minValue13]}\n          warn={userTooYoung} />\n      </div>\n\n      <div className="mt-3">\n        <Field\n          name="phone"\n          type="text"\n          component={RenderField}\n          label="Phone number"\n          validate={[phoneNumberRequired, userRussianPhoneNumberPattern]} />\n      </div>\n\n      <div>\n        <button type="submit" className="btn btn-secondary" disabled={submitting}>\n          Submit\n        </button>\n        <button type="button" className="btn btn-light ml-3" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: \'fieldLevelValidation\',\n})(FieldLevelValidation)\n',he=_(2,"Must be ${min} characters or more, current length is ${length} and the current value is ' ${value}'"),ye=T("Only alphanumeric characters in username are allowed"),Ee=U("Phone number is required"),Ne=B(),xe=H(),Fe=U("Email is required"),Se=D(13),Re=P(16,"You have met the minimum age requirement! But it's better to be ${age}"),Oe=U("Age is required"),we=V.object().shape({username:V.string().required("Username is required").max(15,"Must be ${max} characters or less"),email:V.string().email("Invalid email address"),age:V.number().typeError("Only number is acceptable").positive("Only positive number is acceptable").integer("Only integer number is acceptable")}),qe=Object(C.a)({form:"mixedSyncValidation",validate:M(we),forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username",validate:[he],warn:ye})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email",validate:[Fe],warn:xe})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age",validate:[Oe,Se],warn:Re})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"phone",type:"text",component:G,label:"Phone number",validate:[Ee,Ne]})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),ke="\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport * as yup from 'yup';\nimport { syncValidator } from '../../utils'\nimport { RenderField } from '../shared'\nimport {\n  alphaNumeric,\n  aol,\n  // email,\n  // maxLength,\n  minLength,\n  russianPhoneNumberPattern,\n  minValue,\n  // number,\n  required,\n  tooYoung\n} from '../../utils'\n\n// eslint-disable-next-line no-template-curly-in-string\n// const maxLength15 = maxLength(15, 'Must be ${max} characters or less, current length is ${length} and the current value is ' ${value}'')\n// eslint-disable-next-line no-template-curly-in-string\nconst minLength2 = minLength(2, 'Must be ${min} characters or more, current length is ${length} and the current value is ' ${value}'')\n// const userNameRequired = required('Username is required')\nconst userNameAlphaNumeric = alphaNumeric('Only alphanumeric characters in username are allowed')\nconst phoneNumberRequired = required('Phone number is required')\nconst userRussianPhoneNumberPattern = russianPhoneNumberPattern()\n// const userEmail = email()\nconst userDeprecetedMail = aol()\nconst userEmailRequired = required('Email is required')\nconst minValue13 = minValue(13)\n// eslint-disable-next-line no-template-curly-in-string\nconst userTooYoung = tooYoung(16, 'You have met the minimum age requirement! But it's better to be ${age}')\nconst userAgeRequired = required('Age is required')\n// const ageNumber = number()\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Username is required')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, 'Must be ${max} characters or less'),\n  email: yup\n    .string()\n    .email('Invalid email address'),\n  age: yup\n    .number()\n    // .required('Required')\n    .typeError('Only number is acceptable')\n    .positive('Only positive number is acceptable')\n    .integer('Only integer number is acceptable')\n    // .min(18, 'Sorry, you must be at least 18 years old')\n});\n\n\nconst MixedSyncValidation = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"username\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Username\"\n          validate={[ minLength2]}\n          warn={userNameAlphaNumeric}\n        />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"email\"\n          type=\"email\"\n          component={RenderField}\n          label=\"Email\"\n          validate={[userEmailRequired]}\n          warn={userDeprecetedMail} />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"age\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Age\"\n          validate={[userAgeRequired, minValue13]}\n          warn={userTooYoung} />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"phone\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Phone number\"\n          validate={[phoneNumberRequired, userRussianPhoneNumberPattern]} />\n      </div>\n\n      <div>\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'mixedSyncValidation',\n  validate: syncValidator(validationSchema),\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false\n})(MixedSyncValidation)\n",Ce=V.object().shape({username:V.string().required("Required").max(15,"Must be ${max} characters or less").min(2,"Must be ${min} characters or more"),email:V.string().required("Required").email("Invalid email address"),age:V.number().typeError("Only number is acceptable").required("Required").positive("Only positive number is acceptable").integer("Only integer number is acceptable")}),Ve=Object(C.a)({form:"asyncBlurValidation",validate:M(Ce),asyncValidate:Y,asyncBlurFields:["username","email","age"],persistentSubmitErrors:!0,forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),$e="\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport * as yup from 'yup';\nimport { RenderField } from '../shared'\nimport { syncValidator, asyncValidate } from '../../utils'\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Required')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, 'Must be ${max} characters or less')\n    // eslint-disable-next-line no-template-curly-in-string\n    .min(2, 'Must be ${min} characters or more'),\n  email: yup\n    .string()\n    .required('Required')\n    .email('Invalid email address'),\n  age: yup\n    .number()\n    .typeError('Only number is acceptable')\n    .required('Required')\n    .positive('Only positive number is acceptable')\n    .integer('Only integer number is acceptable')\n});\n\nconst AsyncBlurValidation = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"username\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Username\"\n        />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"email\"\n          type=\"email\"\n          component={RenderField}\n          label=\"Email\" />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"age\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Age\" />\n      </div>\n\n      <div>\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'asyncBlurValidation',\n  validate: syncValidator(validationSchema),\n  asyncValidate: asyncValidate,\n  asyncBlurFields: ['username', 'email', 'age'],\n  persistentSubmitErrors: true\n})(AsyncBlurValidation)\n",Ae=V.object().shape({username:V.string().required("Required").max(15,"Must be ${max} characters or less").min(2,"Must be ${min} characters or more"),email:V.string().required("Required").email("Invalid email address"),age:V.number().typeError("Only number is acceptable").required("Required").positive("Only positive number is acceptable").integer("Only integer number is acceptable")}),Le=Object(C.a)({form:"asyncChangeValidation",validate:M(Ae),asyncValidate:Y,asyncChangeFields:["username","email","age"],persistentSubmitErrors:!0,forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})((function(e){var n=e.handleSubmit,t=e.pristine,a=e.reset,i=e.submitting;return r.a.createElement("form",{noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"username",type:"text",component:G,label:"Username"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"email",type:"email",component:G,label:"Email"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:i},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:t||i,onClick:a},"Clear Values")))})),je="\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport * as yup from 'yup';\nimport { RenderField } from '../shared'\nimport { syncValidator, asyncValidate } from '../../utils'\n\nconst validationSchema = yup.object().shape({\n  username: yup\n    .string()\n    .required('Required')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, 'Must be ${max} characters or less')\n    // eslint-disable-next-line no-template-curly-in-string\n    .min(2, 'Must be ${min} characters or more'),\n  email: yup\n    .string()\n    .required('Required')\n    .email('Invalid email address'),\n  age: yup\n    .number()\n    .typeError('Only number is acceptable')\n    .required('Required')\n    .positive('Only positive number is acceptable')\n    .integer('Only integer number is acceptable')\n});\n\nconst AsyncChangeValidation = ({ handleSubmit, pristine, reset, submitting }) => {\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit}>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"username\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Username\"\n        />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"email\"\n          type=\"email\"\n          component={RenderField}\n          label=\"Email\" />\n      </div>\n\n      <div className=\"mt-3\">\n        <Field\n          name=\"age\"\n          type=\"text\"\n          component={RenderField}\n          label=\"Age\" />\n      </div>\n\n      <div>\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\n          Submit\n        </button>\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'asyncChangeValidation',\n  validate: syncValidator(validationSchema),\n  asyncValidate: asyncValidate,\n  asyncChangeFields: ['username', 'email', 'age'],\n  persistentSubmitErrors: true\n})(AsyncChangeValidation)",Ie=(t(331),function(e){var n=e.meta;return r.a.createElement("div",{className:"error-message"},n.error&&n.touched&&"Please select an option first")}),Me=t(34),Ue=function(e){return e.user},_e=Object(Me.a)(Ue,(function(e){return e.account})),De=Object(Me.a)(Ue,(function(e){return e.colors})),Pe=Object(Me.a)(Ue,(function(e){return e.clubInfo})),He=Object(Me.a)(Ue,(function(e){return e.context})),Te=V.object().shape({firstName:V.string().required("Required").max(15,"Must be ${max} characters or less"),lastName:V.string().required("Required"),age:V.number().typeError("Only number is acceptable").required("Required").positive("Only positive number is acceptable").integer("Only integer number is acceptable").min(18,"Sorry, you must be at least 18 years old"),sex:V.string().required("Required"),favoriteColor:V.string().required("Required"),agreement:V.boolean().test("is-agreement","Required",(function(e){return!!e}))}),Be=function(e){var n=e.colors,t=e.handleSubmit,a=e.load,i=e.pristine,l=e.reset,o=e.submitting,m=e.userAccount,s=!!Object.keys(m).length;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",null,r.a.createElement("button",{className:"btn btn-secondary",type:"button",onClick:function(){return a(z)}},"Load Account")),r.a.createElement("form",{noValidate:!0,onSubmit:t},r.a.createElement("fieldset",{disabled:!s||o},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"firstName",type:"text",component:G,label:"First Name"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"lastName",type:"text",component:G,label:"Last Name"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"age",type:"text",component:G,label:"Age"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement("label",null,"Sex"),r.a.createElement(k.a,{name:"sex",type:"radio",value:"male",component:G,label:"Male"}),r.a.createElement(k.a,{name:"sex",type:"radio",value:"female",component:G,label:"Female"}),r.a.createElement(k.a,{name:"sex",type:"radio",value:"other",component:G,label:"Other"}),r.a.createElement(k.a,{name:"sex",component:Ie})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{label:"Favorite Color",name:"favoriteColor",type:"select",component:G},r.a.createElement("option",null),n&&n.map((function(e,n){return r.a.createElement("option",{key:e+n,value:e},e)})))),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{noValidate:!0,name:"employed",type:"checkbox",component:G,label:"Employed"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{noValidate:!0,name:"bio",type:"textarea",component:G,label:"Bio"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"agreement",type:"checkbox",component:G,label:"Agreement with something terrible"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:o},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:i||o,onClick:l},"Clear Values")))))};Be=Object(C.a)({form:"initializeFromState",validate:M(Te),enableReinitialize:!0,forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})(Be);var Ye=Be=Object(c.b)((function(e){return{colors:De(e),userAccount:_e(e),initialValues:_e(e)}}),{load:function(e){return{type:"USER_DATA_SUCCESS",payload:{account:e}}}})(Be),ze='\nimport React from \'react\'\nimport { Field, reduxForm } from \'redux-form\'\nimport * as yup from \'yup\';\nimport { connect } from \'react-redux\'\nimport { RenderField } from \'../shared\'\nimport { syncValidator } from \'../../utils\';\nimport ErrorMessage from \'../shared/ErrorMessage/ErrorMessage\';\nimport { getUserColors, getUserAccount } from \'../../store/selectors/user\';\nimport { userDataSuccess } from \'../../store/actions\';\nimport { userAccount as mockUserAccount } from \'../../utils\'\n\nconst validationSchema = yup.object().shape({\n  firstName: yup\n    .string()\n    .required(\'Required\')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, \'Must be ${max} characters or less\'),\n  lastName: yup\n    .string()\n    .required(\'Required\'),\n  age: yup\n    .number()\n    .typeError(\'Only number is acceptable\')\n    .required(\'Required\')\n    .positive(\'Only positive number is acceptable\')\n    .integer(\'Only integer number is acceptable\')\n    .min(18, \'Sorry, you must be at least 18 years old\'),\n  sex: yup\n    .string()\n    .required(\'Required\'),\n  favoriteColor: yup\n    .string()\n    .required(\'Required\'),\n  agreement: yup\n    .boolean()\n    .test(\n      \'is-agreement\',\n      \'Required\',\n      value => !!value\n    )\n});\n\nlet InitializeFromState = ({\n  colors,\n  handleSubmit,\n  load,\n  pristine,\n  reset,\n  submitting,\n  userAccount\n}) => {\n  const isAccount = !!Object.keys(userAccount).length\n  return (\n    <>\n      <div>\n        <button className="btn btn-secondary" type="button" onClick={() => load(mockUserAccount)}>\n          Load Account\n        </button>\n      </div>\n      <form\n        noValidate\n        onSubmit={handleSubmit}>\n\n        <fieldset disabled={!isAccount || submitting}>\n          <div className="mt-3">\n            <Field\n              name="firstName"\n              type="text"\n              component={RenderField}\n              label="First Name"\n            />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              name="lastName"\n              type="text"\n              component={RenderField}\n              label="Last Name" />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              name="age"\n              type="text"\n              component={RenderField}\n              label="Age" />\n          </div>\n\n          <div className="mt-3">\n            <label>Sex</label>\n            <Field\n              name="sex"\n              type="radio"\n              value="male"\n              component={RenderField}\n              label="Male" />\n            <Field\n              name="sex"\n              type="radio"\n              value="female"\n              component={RenderField}\n              label="Female" />\n            <Field\n              name="sex"\n              type="radio"\n              value="other"\n              component={RenderField}\n              label="Other" />\n\n            <Field name="sex" component={ErrorMessage} />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              label="Favorite Color"\n              name="favoriteColor"\n              type="select"\n              component={RenderField}>\n              <option />\n              {colors && colors.map((color, i) => (\n                <option key={color + i} value={color}>{color}</option>\n              ))}\n            </Field>\n          </div>\n\n          <div className="mt-3">\n            <Field\n              noValidate\n              name="employed"\n              type="checkbox"\n              component={RenderField}\n              label="Employed" />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              noValidate\n              name="bio"\n              type="textarea"\n              component={RenderField}\n              label="Bio" />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              name="agreement"\n              type="checkbox"\n              component={RenderField}\n              label="Agreement with something terrible" />\n          </div>\n\n          <div>\n            <button type="submit" className="btn btn-secondary" disabled={submitting}>\n              Submit\n        </button>\n            <button type="button" className="btn btn-light ml-3" disabled={pristine || submitting} onClick={reset}>\n              Clear Values\n        </button>\n          </div>\n        </fieldset>\n      </form>\n    </>\n  )\n\n}\n\nconst mapStateToProps = state => ({\n  colors: getUserColors(state),\n  userAccount: getUserAccount(state),\n  initialValues: getUserAccount(state),\n})\n\nInitializeFromState = reduxForm({\n  form: \'initializeFromState\',\n  validate: syncValidator(validationSchema),\n  enableReinitialize: true,\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false\n})(InitializeFromState)\n\nInitializeFromState = connect(\n  mapStateToProps,\n  { load: userDataSuccess }\n)(InitializeFromState)\n\nexport default InitializeFromState\n\n',We=t(374),Ge=V.object().shape({nickname:V.string().when("$requiredNickname",(function(e,n){return e?n.required("Required"):n})),firstName:V.string().required("Required").max(15,"Must be ${max} characters or less"),lastName:V.string().required("Required"),hasEmail:V.boolean(),email:V.string().email("Invalid email").when("hasEmail",{is:!0,then:V.string().required("Required"),otherwise:V.string()}),favoriteColor:V.string().required("Required"),agreement:V.boolean().test("is-agreement","Required",(function(e){return!!e}))}),Xe=function(e){var n=e.colors,t=e.handleSubmit,i=e.hasEmailValue,l=e.favoriteColorValue,o=e.context,m=e.pristine,s=e.reset,c=e.submitting,u=e.resetSection,d=Object(a.useCallback)((function(){u("email")}),[u]),b=o.requiredNickname;return r.a.createElement(r.a.Fragment,null,r.a.createElement("form",{noValidate:!0,onSubmit:t},r.a.createElement("fieldset",{disabled:c},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{update:b,noValidate:!b,name:"nickname",type:"text",component:G,label:"Nickname"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"firstName",type:"text",component:G,label:"First Name"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"lastName",type:"text",component:G,label:"Last Name"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{noValidate:!0,name:"hasEmail",type:"checkbox",component:G,label:"Has email?"})),i&&r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{onDestoy:d,name:"email",type:"email",component:G,label:"Email"})),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{label:"Favorite Color",name:"favoriteColor",type:"select",component:G},r.a.createElement("option",null),n&&n.map((function(e,n){return r.a.createElement("option",{key:e+n,value:e},e)})))),l&&r.a.createElement("div",{style:{height:80,width:200,margin:"10px auto",backgroundColor:l}}),r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"agreement",type:"checkbox",component:G,label:"Agreement with something terrible"})),r.a.createElement("div",null,r.a.createElement("button",{type:"submit",className:"btn btn-secondary",disabled:c},"Submit"),r.a.createElement("button",{type:"button",className:"btn btn-light ml-3",disabled:m||c,onClick:s},"Clear Values")))))},Ze=Object(We.a)("selectingFormValues");Xe=Object(C.a)({form:"selectingFormValues",validate:M(Ge),touchOnChange:!0,forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})(Xe);var Je=Xe=Object(c.b)((function(e){return{colors:De(e),hasEmailValue:Ze(e,"hasEmail"),favoriteColorValue:Ze(e,"favoriteColor"),context:He(e)}}))(Xe),Ke='\nimport React, { useCallback } from \'react\'\nimport { Field, reduxForm, formValueSelector } from \'redux-form\'\nimport * as yup from \'yup\';\nimport { connect } from \'react-redux\'\nimport { RenderField } from \'../shared\'\nimport { syncValidator } from \'../../utils\'\nimport { getUserColors, getUserContext } from \'../../store/selectors/user\'\n\nconst validationSchema = yup.object().shape({\n  nickname: yup\n    .string()\n    .when(\'$requiredNickname\', (requiredNickname, schema) => {\n      return (requiredNickname ? schema.required(\'Required\') : schema)\n    }),\n  firstName: yup\n    .string()\n    .required(\'Required\')\n    // eslint-disable-next-line no-template-curly-in-string\n    .max(15, \'Must be ${max} characters or less\'),\n  lastName: yup\n    .string()\n    .required(\'Required\'),\n  hasEmail: yup\n    .boolean(),\n  email: yup\n    .string()\n    .email(\'Invalid email\')\n    .when(\'hasEmail\', {\n      is: true,\n      then: yup.string().required(\'Required\'),\n      otherwise: yup.string()\n    }),\n  favoriteColor: yup\n    .string()\n    .required(\'Required\'),\n  agreement: yup\n    .boolean()\n    .test(\n      \'is-agreement\',\n      \'Required\',\n      value => !!value\n    )\n});\n\nlet SelectingFormValues = ({\n  colors,\n  handleSubmit,\n  hasEmailValue,\n  favoriteColorValue,\n  context,\n  pristine,\n  reset,\n  submitting,\n  resetSection,\n}) => {\n  const memorizedDestroyEmail = useCallback(() => { resetSection(\'email\') }, [resetSection])\n  const { requiredNickname } = context\n\n  return (\n    <>\n      <form\n        noValidate\n        onSubmit={handleSubmit}>\n\n        <fieldset disabled={submitting}>\n          <div className="mt-3">\n            <Field\n              update={requiredNickname}\n              noValidate={!requiredNickname}\n              name="nickname"\n              type="text"\n              component={RenderField}\n              label="Nickname"\n            />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              name="firstName"\n              type="text"\n              component={RenderField}\n              label="First Name"\n            />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              name="lastName"\n              type="text"\n              component={RenderField}\n              label="Last Name" />\n          </div>\n\n          <div className="mt-3">\n            <Field\n              noValidate\n              name="hasEmail"\n              type="checkbox"\n              component={RenderField}\n              label="Has email?" />\n          </div>\n\n          {hasEmailValue && <div className="mt-3">\n            <Field\n              onDestoy={memorizedDestroyEmail}\n              name="email"\n              type="email"\n              component={RenderField}\n              label="Email" />\n          </div>}\n\n          <div className="mt-3">\n            <Field\n              label="Favorite Color"\n              name="favoriteColor"\n              type="select"\n              component={RenderField}>\n              <option />\n              {colors && colors.map((color, i) => (\n                <option key={color + i} value={color}>{color}</option>\n              ))}\n            </Field>\n          </div>\n\n          {favoriteColorValue && (\n            <div\n              style={{\n                height: 80,\n                width: 200,\n                margin: \'10px auto\',\n                backgroundColor: favoriteColorValue\n              }}\n            />\n          )}\n\n          <div className="mt-3">\n            <Field\n              name="agreement"\n              type="checkbox"\n              component={RenderField}\n              label="Agreement with something terrible" />\n          </div>\n\n          <div>\n            <button\n              type="submit"\n              className="btn btn-secondary"\n              disabled={submitting}>\n              Submit\n            </button>\n            <button\n              type="button"\n              className="btn btn-light ml-3"\n              disabled={pristine || submitting}\n              onClick={reset}>\n              Clear Values\n            </button>\n          </div>\n        </fieldset>\n      </form>\n    </>\n  )\n}\n\nconst selector = formValueSelector(\'selectingFormValues\')\n\nconst mapStateToProps = state => ({\n  colors: getUserColors(state),\n  hasEmailValue: selector(state, \'hasEmail\'),\n  favoriteColorValue: selector(state, \'favoriteColor\'),\n  context: getUserContext(state)\n})\n\nSelectingFormValues = reduxForm({\n  form: \'selectingFormValues\',\n  validate: syncValidator(validationSchema),\n  touchOnChange: true,\n  forceUnregisterOnUnmount: true,\n  destroyOnUnmount: false\n})(SelectingFormValues)\n\nSelectingFormValues = connect(\n  mapStateToProps,\n)(SelectingFormValues)\n\nexport default SelectingFormValues\n',Qe=t(32),en=t(181),nn=t(372),tn="member",an=Object(a.createContext)(),rn=an.Provider,ln=an.Consumer,on=function(e){var n=e.blockInput,t=e.fields,a=(e.maxHobbiesLength,e.meta),i=a.error,l=a.warning;return r.a.createElement("ul",{className:"list-group"},r.a.createElement("li",{className:"list-group-item bg-transparent"},r.a.createElement(ln,null,(function(e){return r.a.createElement("button",{disabled:t.length>=e.maxHobbiesLength,className:"btn btn-secondary",type:"button",onClick:function(){return t.push()}},"Add Hobby")})),i&&r.a.createElement("div",{className:"error-message"},i),l&&r.a.createElement("div",{className:"warning-message"},l)),t.map((function(e,a){return r.a.createElement("li",{className:"list-group-item",key:a},r.a.createElement("button",{className:"close",type:"button",title:"Remove Hobby",onClick:function(){return t.remove(a)}},r.a.createElement("span",{"aria-hidden":"true"},"\xd7")),r.a.createElement(k.a,{blockInput:n,name:e,type:"text",component:G,label:"Hobby #".concat(a+1)}))})))},mn='\nimport React from \'react\'\nimport { Field } from \'redux-form\'\nimport { RenderField } from \'../../shared\'\n\n\nconst RenderHobbies = ({ blockInput, fields, maxHobbiesLength, meta: { error, warning } }) => {\n  return (<ul className="list-group">\n    <li className="list-group-item bg-transparent">\n      <button\n        disabled={fields.length >= maxHobbiesLength}\n        className="btn btn-secondary"\n        type="button"\n        onClick={() => fields.push()}\n      >\n        Add Hobby\n      </button>\n      {error && <div className="error-message">{error}</div>}\n      {warning && <div className="warning-message">{warning}</div>}\n    </li>\n\n    {fields.map((hobby, index) => (\n      <li className="list-group-item" key={index}>\n        <button\n          className="close"\n          type="button"\n          title="Remove Hobby"\n          onClick={() => fields.remove(index)}\n        >\n          <span aria-hidden="true">&times;</span>\n        </button>\n        <Field\n          blockInput={blockInput}\n          name={hobby}\n          type="text"\n          component={RenderField}\n          label={`Hobby #${index + 1}`}\n        />\n      </li>\n    ))}\n  </ul>)\n}\n\nexport default RenderHobbies\n',sn=(t(332),t(59)),cn=t(60),un=t(84),dn="\nimport React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport MemberTypes from './MemberTypes'\nimport { Field, FieldArray } from 'redux-form'\nimport { RenderField } from '../../shared'\nimport RenderHobbies from '../RenderHobbies/RenderHobbies'\nimport './Member.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowUp, faArrowDown, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport {\n  isMobile\n} from \"react-device-detect\";\n\nconst Member = ({\n  member,\n  index,\n  fields,\n  firstName,\n  lastName,\n  maxHobbiesLength,\n  hobbies,\n  moveCard,\n  endDrag,\n  beginDrag,\n  blockInput,\n  highLight\n}) => {\n  const fieldsLength = fields.length\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: MemberTypes.MEMBER,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [collectedProps, drag] = useDrag({\n    item: { type: MemberTypes.MEMBER, index },\n    collect: monitor => {\n      return {\n        isDragging: monitor.isDragging(),\n      }\n    },\n    end: () => endDrag(false),\n    begin: () => beginDrag(true)\n  })\n  const { isDragging } = collectedProps\n  const opacity = isDragging ? 1 : 1\n  fieldsLength > 1 && drag(drop(ref))\n\n  return (\n    <div ref={ref} style={{ opacity }}>\n      <li\n        className={(highLight ? 'member_highLight' : '') + ' list-group-item member '} key={index}>\n        <div className={(isMobile ? 'member__actions_visible' : '') +\n          ' member__actions '\n        }>\n          {fieldsLength > 1 && <div>\n            <button\n              className=\"member__action\"\n              type=\"button\"\n              onClick={() => fields.move(index, index === 0 ? fieldsLength - 1 : index - 1)}>\n              <FontAwesomeIcon icon={faArrowUp} />\n            </button>\n            <button\n              className=\"member__action\"\n              type=\"button\"\n              onClick={() => fields.move(index, index === fieldsLength - 1 ? 0 : index + 1)}>\n              <FontAwesomeIcon icon={faArrowDown} />\n            </button>\n          </div>}\n\n          <button\n            className=\"member__action\"\n            type=\"button\"\n            title=\"Remove Member\"\n            onClick={() => fields.remove(index)}\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n\n        <h4>Member #{index + 1}\n          <div className=\"border text-secondary px-2 py-2 mt-2\" style={{\n            color: 'grey',\n            fontSize: '12px'\n          }}>{firstName} <br /> {lastName}</div>\n        </h4>\n        <div style={{ position: 'relative' }}>\n          <Field\n            blockInput={blockInput}\n            name={`${member}.firstName`}\n            type=\"text\"\n            component={RenderField}\n            label=\"First Name\"\n          />\n          <Field\n            blockInput={blockInput}\n            name={`${member}.lastName`}\n            type=\"text\"\n            component={RenderField}\n            label=\"Last Name\"\n          />\n\n          <div className=\"mb-2\">\n            {hobbies && hobbies.map((b, i) =>\n              <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                key={b + i.toString()}\n                href={`https://www.google.com/search?q=${b}`}>\n                <span className=\"badge badge-primary mr-1\">{b}</span>\n              </a>)}\n          </div>\n\n          <FieldArray\n            blockInput={isDragging}\n            maxHobbiesLength={maxHobbiesLength}\n            name={`${member}.hobbies$`}\n            component={RenderHobbies} />\n        </div>\n      </li>\n    </div>\n  )\n}\n\nexport default Member\n",bn=function(e){var n=e.member,t=e.index,i=e.fields,l=e.firstName,m=e.lastName,s=e.maxHobbiesLength,c=e.hobbies,u=e.moveCard,d=e.endDrag,b=e.beginDrag,p=e.blockInput,g=e.highLight,f=i.length,v=Object(a.useRef)(null),h=Object(o.d)({accept:tn,hover:function(e,n){if(v.current){var a=e.index,r=t;if(a!==r){var i=v.current.getBoundingClientRect(),l=(i.bottom-i.top)/2,o=n.getClientOffset().y-i.top;a<r&&o<l||a>r&&o>l||(u(a,r),e.index=r)}}}}),y=Object(Qe.a)(h,2)[1],E=Object(o.c)({item:{type:tn,index:t},collect:function(e){return{isDragging:e.isDragging()}},end:function(){return d(!1)},begin:function(){return b(!0)}}),N=Object(Qe.a)(E,2),x=N[0],F=N[1],S=x.isDragging;return f>1&&F(y(v)),r.a.createElement("div",{ref:v,style:{opacity:1}},r.a.createElement("li",{className:(g?"member_highLight":"")+" list-group-item member ",key:t},r.a.createElement("div",{className:(un.isMobile?"member__actions_visible":"")+" member__actions "},f>1&&r.a.createElement("div",null,r.a.createElement("button",{className:"member__action",type:"button",onClick:function(){return i.move(t,0===t?f-1:t-1)}},r.a.createElement(sn.a,{icon:cn.b})),r.a.createElement("button",{className:"member__action",type:"button",onClick:function(){return i.move(t,t===f-1?0:t+1)}},r.a.createElement(sn.a,{icon:cn.a}))),r.a.createElement("button",{className:"member__action",type:"button",title:"Remove Member",onClick:function(){return i.remove(t)}},r.a.createElement(sn.a,{icon:cn.d}))),r.a.createElement("h4",null,"Member #",t+1,r.a.createElement("div",{className:"border text-secondary px-2 py-2 mt-2",style:{color:"grey",fontSize:"12px"}},l," ",r.a.createElement("br",null)," ",m)),r.a.createElement("div",{style:{position:"relative"}},r.a.createElement(k.a,{blockInput:p,name:"".concat(n,".firstName"),type:"text",component:G,label:"First Name"}),r.a.createElement(k.a,{blockInput:p,name:"".concat(n,".lastName"),type:"text",component:G,label:"Last Name"}),r.a.createElement("div",{className:"mb-2"},c&&c.map((function(e,n){return r.a.createElement("a",{rel:"noopener noreferrer",target:"_blank",key:e+n.toString(),href:"https://www.google.com/search?q=".concat(e)},r.a.createElement("span",{className:"badge badge-primary mr-1"},e))}))),r.a.createElement(nn.a,{blockInput:S,maxHobbiesLength:s,name:"".concat(n,".hobbies$"),component:on}))))},pn=Object(We.a)("fieldArraysForm"),gn=V.object().shape({clubName:V.string().required("Club name is required").max(25,"Must be ${max} characters or less").min(2,"Must be ${min} characters or more"),members$:V.array().of(V.object().shape({firstName:V.string().required("First name is required"),lastName:V.string().required("Last name is required"),hobbies$:V.array().of(V.string().required("Hobbie is required"))})).required("At least one member must be entered")});bn=Object(c.b)((function(e,n){return{firstName:pn(e,"".concat(n.member,".firstName")),lastName:pn(e,"".concat(n.member,".lastName")),hobbies:pn(e,"".concat(n.member,".hobbies$"))}}))(bn);var fn=function(e){var n=e.fields,t=e.maxHobbiesLength,i=e.meta,l=i.error,o=i.warning,m=i.submitFailed,s=n.getAll(),c=Object(a.useState)(!1),u=Object(Qe.a)(c,2),d=u[0],b=u[1],p=Object(a.useState)(0),g=Object(Qe.a)(p,2),f=g[0],v=g[1],h=Object(a.useCallback)((function(e,t){v(t),n.swap(e,t)}),[s,n]);return r.a.createElement("ul",{className:"list-group"},r.a.createElement("li",{className:"list-group-item"},r.a.createElement(ln,null,(function(e){return r.a.createElement("button",{disabled:n.length>=e.members,className:"btn btn-secondary",type:"button",onClick:function(){return n.push({})}},"Add Member")})),m&&l&&r.a.createElement("div",{className:"error-message"},l),o&&r.a.createElement("div",{className:"warning-message"},o)),r.a.createElement("div",null,n.map((function(e,a){return r.a.createElement(bn,{highLight:d&&a===f,blockInput:d,beginDrag:function(){return b(!0)},endDrag:function(){return b(!1)},moveCard:h,maxHobbiesLength:t,member:e,fields:n,index:a,key:a})}))))},vn=function(e){var n=e.handleSubmit,t=e.maxHobbiesLength,a=e.pristine,i=e.reset,l=e.submitting,o=e.load;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",null,r.a.createElement("button",{className:"btn btn-secondary",type:"button",onClick:function(){return o(W)}},"Load club info")),r.a.createElement("form",{className:"mt-3",noValidate:!0,onSubmit:n},r.a.createElement("div",{className:"mt-3"},r.a.createElement(k.a,{name:"clubName",type:"text",component:G,label:"Club Name"})),r.a.createElement(nn.a,{maxHobbiesLength:t,name:"members$",component:fn}),r.a.createElement("div",{className:"mt-3"},r.a.createElement("button",{type:"submit",disabled:l,className:"btn btn-secondary"},"Submit"),r.a.createElement("button",{type:"submit",disabled:a||l,onClick:i,className:"btn btn-light ml-3"},"Clear"))))};vn=Object(C.a)({form:"fieldArraysForm",warn:function(e){var n={};if(n.members$||(n.members$=[]),e.members$){var t=[];e.members$.forEach((function(e,n){var a={};e&&e.hobbies$&&e.hobbies$.length&&e.hobbies$.length>=5&&(a.hobbies$||(a.hobbies$=[]),a.hobbies$._warning="No more than five hobbies allowed",t[n]=a)})),t.length&&(n.members$=[].concat(Object(en.a)(n.members$),t))}return e.members$&&e.members$.length>=3&&(n.members$._warning="Max 3 mebmers allowed"),n},validate:M(gn),forceUnregisterOnUnmount:!0,destroyOnUnmount:!1})(vn);var hn=vn=Object(c.b)((function(e){return{initialValues:Pe(e)}}),{load:function(e){return{type:"USER_CLUB_INFO_SUCCESS",payload:{clubInfo:e}}}})(vn),yn="\nimport React, { useCallback, useState } from 'react'\nimport { Field, reduxForm, FieldArray, formValueSelector } from 'redux-form'\nimport * as yup from 'yup';\nimport { connect } from 'react-redux'\nimport { syncValidator } from '../../utils'\nimport { RenderField } from '../shared'\nimport { userClubInfo as mockUserClubInfo } from '../../utils'\nimport { getUserClubInfo } from '../../store/selectors/user';\nimport { userClubInfoSuccess } from '../../store/actions';\nimport M from '../FieldArraysForm/Member/Member'\n\nlet Member = M\n\nconst selector = formValueSelector('fieldArraysForm')\n\nconst validationSchema = yup\n  .object()\n  .shape({\n    clubName: yup\n      .string()\n      .required('Club name is required')\n      // eslint-disable-next-line no-template-curly-in-string\n      .max(25, 'Must be ${max} characters or less')\n      // eslint-disable-next-line no-template-curly-in-string\n      .min(2, 'Must be ${min} characters or more'),\n    members$: yup\n      .array()\n      .of(yup\n        .object()\n        .shape({\n          firstName: yup\n            .string()\n            .required('First name is required'),\n          lastName: yup\n            .string()\n            .required('Last name is required'),\n          hobbies$: yup\n            .array()\n            .of(yup\n              .string()\n              .required('Hobbie is required')\n            )\n          // .max(4, 'No more than five hobbies allowed')\n        })\n      )\n      // .max(2, 'Max 3 mebmers allowed')\n      .required('At least one member must be entered')\n  });\n\nconst warn = (values) => {\n  // console.log('values', values)\n  const warnings = {}\n\n  if (!warnings.members$) {\n    warnings.members$ = []\n  }\n\n  if (values.members$) {\n    const membersArrayWarnings = []\n    values.members$.forEach((member, memberIndex) => {\n      const memberWarnings = {}\n\n\n      if (member && member.hobbies$ && member.hobbies$.length) {\n        if (member.hobbies$.length >= 5) {\n          if (!memberWarnings.hobbies$) {\n            memberWarnings.hobbies$ = []\n          }\n          memberWarnings.hobbies$._warning = 'No more than five hobbies allowed'\n          membersArrayWarnings[memberIndex] = memberWarnings\n        }\n      }\n\n    })\n    if (membersArrayWarnings.length) {\n      warnings.members$ = [...warnings.members$, ...membersArrayWarnings]\n    }\n  }\n\n  if (values.members$ && values.members$.length >= 3) {\n    warnings.members$._warning = 'Max 3 mebmers allowed'\n  }\n\n  return warnings\n}\n\nMember = connect(\n  (state, props) => ({\n    firstName: selector(state, `${props.member}.firstName`),\n    lastName: selector(state, `${props.member}.lastName`),\n    hobbies: selector(state, `${props.member}.hobbies$`)\n  })\n)(Member)\n\nconst RenderMembers = ({\n  fields,\n  maxHobbiesLength,\n  meta: { error, warning, submitFailed }\n}) => {\n  const allFields = fields.getAll()\n  const [isDragging, setIsDragging] = useState(false)\n  const [hoverIndex, setHoverIndex] = useState(0)\n  const moveCard = useCallback(\n    (dragIndex, hoverIndex) => {\n      setHoverIndex(hoverIndex)\n      fields.swap(dragIndex, hoverIndex)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allFields, fields],\n  )\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item\">\n\n        <button\n          disabled={fields.length >= 3}\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() => fields.push({})}\n        >\n          Add Member\n        </button>\n\n        {submitFailed && error && <div className=\"error-message\">{error}</div>}\n        {warning && <div className=\"warning-message\">{warning}</div>}\n      </li>\n\n      <div>\n        {fields.map((member, index) =>\n          <Member\n            highLight={isDragging && index === hoverIndex}\n            blockInput={isDragging}\n            beginDrag={() => setIsDragging(true)}\n            endDrag={() => setIsDragging(false)}\n            moveCard={moveCard}\n            maxHobbiesLength={maxHobbiesLength}\n            member={member}\n            fields={fields}\n            index={index}\n            key={index}\n          />)}\n      </div>\n    </ul>\n  )\n}\n\nlet FieldArraysForm = ({\n  handleSubmit,\n  maxHobbiesLength,\n  pristine,\n  reset,\n  submitting,\n  load\n}) => {\n  return (\n    <>\n      <div>\n        <button\n          className=\"btn btn-secondary\"\n          type=\"button\"\n          onClick={() => load(mockUserClubInfo)}>\n          Load club info\n        </button>\n      </div>\n      <form\n        className=\"mt-3\"\n        noValidate\n        onSubmit={handleSubmit}>\n\n        <div className=\"mt-3\">\n          <Field\n            name=\"clubName\"\n            type=\"text\"\n            component={RenderField}\n            label=\"Club Name\"\n          />\n        </div>\n\n        <FieldArray\n          maxHobbiesLength={maxHobbiesLength}\n          name=\"members$\"\n          component={RenderMembers} />\n\n        <div className=\"mt-3\">\n          <button\n            type=\"submit\"\n            disabled={submitting}\n            className=\"btn btn-secondary\">Submit</button>\n\n          <button\n            type=\"submit\"\n            disabled={pristine || submitting} onClick={reset}\n            className=\"btn btn-light ml-3\">Clear</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  initialValues: getUserClubInfo(state),\n})\n\nFieldArraysForm = reduxForm({\n  form: 'fieldArraysForm',\n  warn,\n  validate: syncValidator(validationSchema),\n})(FieldArraysForm)\n\nFieldArraysForm = connect(\n  mapStateToProps,\n  { load: userClubInfoSuccess }\n)(FieldArraysForm)\n\nexport default FieldArraysForm\n",En=t(369),Nn=t(363),xn=t(364),Fn=t(365),Sn=t(366),Rn=(t(336),t(337),function(e){var n=e.disabled,t=e.theme,a=e.text,i=e.icon,l=e.onClick,o=void 0===l?function(){}:l;return r.a.createElement("button",{style:{opacity:n?.5:1},disabled:n,className:"show-case-btn_".concat(t," show-case-btn"),onClick:o},i&&r.a.createElement(sn.a,{icon:i}),a&&" "+a)}),On=function(e){return e.ui},wn=Object(Me.a)(On,(function(e){return e.theme})),qn=Object(Me.a)(On,(function(e){return e.prismShowLoader})),kn=Object(c.b)((function(e){return{theme:wn(e),showLoader:qn(e)}}),(function(e){return{onChangeTheme:function(n){return e(function(e){return function(n){var t;n({type:"UI_PRISM_SHOW_LOADER",payload:t}),h.changeTheme(e).then((function(e){n(function(e){return{type:"UI_CHANGE_THEME",payload:{theme:e}}}(e))})).catch(console.error).finally((function(){return n(function(e){return{type:"UI_PRISM_HIDE_LOADER",payload:e}}())}))}}(n))}}}))((function(e){var n=e.component,t=e.codeListining,i=e.onChangeTheme,l=e.title,o=e.theme,m=e.showLoader,s=e.children,c=Object(a.useState)(!1),u=Object(Qe.a)(c,2),d=u[0],b=u[1],p=function(){return b(!1)};return r.a.createElement("div",null,r.a.createElement("div",null,r.a.createElement(En.a,{className:"show-case",dialogClassName:"show-case__dialog",show:d,onHide:p},r.a.createElement(En.a.Header,{closeButton:!0},r.a.createElement(Nn.a,{fluid:!0},r.a.createElement(xn.a,null,r.a.createElement(Fn.a,{xs:11},r.a.createElement(En.a.Title,null,l)),r.a.createElement(Fn.a,null,r.a.createElement("div",{className:"show-case__actions"},r.a.createElement(Rn,{disabled:m,onClick:function(){return i("prism"===o?"prism-okaidia":"prism")},theme:o,icon:cn.c})))))),r.a.createElement(En.a.Body,null,r.a.createElement("div",{className:"show-case__content"},r.a.createElement("div",{className:"show-case__col"},r.a.createElement("div",{className:"show-case__body"},s,n)),r.a.createElement("div",{className:"show-case__col"},r.a.createElement("div",{className:"show-case__body show-case__body_listening"},t)))),r.a.createElement(En.a.Footer,null,r.a.createElement(Sn.a,{variant:"secondary",onClick:p},"Close")))),s,!d&&n,r.a.createElement("hr",null),r.a.createElement("div",null,r.a.createElement(Sn.a,{variant:"secondary",onClick:function(){b(!0),i(o)}},"Expand")))}));var Cn=function(e){var n=e.children,t=e.title;return r.a.createElement("div",{className:"mb-3 mt-3"},r.a.createElement("div",{className:"border px-2 py-2"},r.a.createElement("div",{className:"alert alert-secondary mt-2",role:"alert"},t),n))},Vn=(t(355),t(121)),$n=t.n(Vn),An=(t(357),t(358),function(){return r.a.createElement("div",{className:"spiner-roller"},r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null),r.a.createElement("div",null))}),Ln=t(370),jn=t(367),In=Object(c.b)((function(e){return{theme:wn(e),showLoader:qn(e)}}))((function(e){var n=e.codeListening,t=e.lang,a=void 0===t?"language-javascript":t,i=e.showLoader;return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:(i?"code-listening__loader_show":"")+" code-listening__loader"},r.a.createElement(An,null)),r.a.createElement("div",{className:"code-listening"},!n.map&&r.a.createElement("div",{className:"code-listening__full"},r.a.createElement("div",{className:"code-listening__full-inner"},r.a.createElement($n.a,{component:"pre",className:a},n))),n.map&&r.a.createElement("div",{className:"code-listening__full"},r.a.createElement("div",{className:"code-listening__tabs"},r.a.createElement(Ln.a,{transition:!1,defaultActiveKey:n[0].title,id:"uncontrolled-tab-example"},n.map((function(e,n){return r.a.createElement(jn.a,{key:n,eventKey:e.title,title:e.title},r.a.createElement($n.a,{component:"pre",className:a},e.code))})))))))})),Mn=Object(c.b)((function(e){return{context:He(e)}}),(function(e){return{toggleNickNameRequired:function(n){return e(function(e){return{type:"USER_TOGGLE_REQUIRED_NICKNAME",payload:e}}(n))}}}))((function(e){var n=e.context,t=e.toggleNickNameRequired,a=n.requiredNickname;return r.a.createElement("button",{onClick:function(){return t(!a)},type:"submit",className:"btn btn-secondary"},'Toggle nickname required "',a?"required":"not required",'"')}));var Un=function(){return r.a.createElement("div",{className:"container-fluid"},r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-sm"},r.a.createElement(Cn,{title:"Simple from without validation."},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:ee}),component:r.a.createElement(Q,{onSubmit:$}),title:"Simple from without validation."})),r.a.createElement(Cn,{title:"Initialize from state."},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:ze}),component:r.a.createElement(Ye,{onSubmit:$}),title:"Initialize from state."}))),r.a.createElement("div",{className:"col-sm"},r.a.createElement(Cn,{title:"Simple sync validation."},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:te}),component:r.a.createElement(ne,{onSubmit:$}),title:"Simple sync validation."})),r.a.createElement(Cn,{title:"Mixed sync validation.(field level and validation fn)"},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:ke}),component:r.a.createElement(qe,{onSubmit:$}),title:"Mixed sync validation.(field level and validation fn)"})),r.a.createElement(Cn,{title:"Selecting form values, conditional validation with yup and context"},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:Ke}),component:r.a.createElement(Je,{onSubmit:$}),title:"Selecting form values, conditional validation with yup and context"},r.a.createElement(Mn,null)))),r.a.createElement("div",{className:"col-sm"},r.a.createElement(Cn,{title:"Simple sync validation with yup."},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:K}),component:r.a.createElement(J,{onSubmit:$}),title:"Simple sync validation with yup."})),r.a.createElement(Cn,{title:"Async blur validation.(fails on multiple fields validation)"},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:$e}),component:r.a.createElement(Ve,{onSubmit:$}),title:"Async blur validation.(fails on multiple fields validation)"})),r.a.createElement(Cn,{title:"Field arrays form(moving and DnD)"},r.a.createElement(rn,{value:{maxHobbiesLength:5,members:3}},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:[{title:"Main",code:yn},{title:"Member",code:dn},{title:"Hobbies",code:mn}]}),component:r.a.createElement(hn,{onSubmit:$}),title:"Field arrays form(moving and DnD)"})))),r.a.createElement("div",{className:"col-sm"},r.a.createElement(Cn,{title:"Field level validation."},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:ve}),component:r.a.createElement(fe,{onSubmit:$}),title:"Field level validation."})),r.a.createElement(Cn,{title:"Async change validation.(fails on multiple fields validation)"},r.a.createElement(kn,{codeListining:r.a.createElement(In,{codeListening:je}),component:r.a.createElement(Le,{onSubmit:$}),title:"Async change validation.(fails on multiple fields validation)"})))))},_n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=[d.a];return{store:Object(u.createStore)(w,e,Object(q.composeWithDevTools)(u.applyMiddleware.apply(void 0,n)))}}().store,Dn=r.a.createElement(o.b,{backend:un.isMobile?s.a:m.a},r.a.createElement(c.a,{store:_n},r.a.createElement(Un,null)));l.a.render(Dn,document.getElementById("root"))}},[[183,1,2]]]);
//# sourceMappingURL=main.04392910.chunk.js.map