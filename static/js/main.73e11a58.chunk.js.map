{"version":3,"sources":["services/prism.servise.js","store/actions/ui.js","store/reducers/user.js","store/actions/user.js","store/reducers/ui.js","store/reducers/index.js","utils/common.js","utils/validators.js","utils/mockData.js","pages/Page/Page.js","components/shared/renderField/renderField.js","components/SyncValidationFormYup/SyncValidationFormYup.js","components/SimpleForm/SimpleForm.js","components/SyncValidationForm/SyncValidationForm.js","components/FieldLevelValidation/FieldLevelValidation.js","components/MixedSyncValidation/MixedSyncValidation.js","components/AsyncBlurValidation/AsyncBlurValidation.js","components/AsyncChangeValidation/AsyncChangeValidation.js","components/shared/ErrorMessage/ErrorMessage.js","store/selectors/user.js","components/InitializeFromState/InitializeFromState.js","components/SelectingFormValues/SelectingFormValues.js","components/FieldArraysForm/Member/MemberTypes.js","components/FieldArraysForm/RenderHobbies/RenderHobbies.js","components/FieldArraysForm/FieldArraysForm.js","components/FieldArraysForm/Member/Member.js","components/shared/ShowCaseButton/ShowCaseButton.js","store/selectors/ui.js","components/ShowCase/ShowCase.js","components/Wrapper/Wrapper.js","components/CodeListening/CodeListening.js","App.js","index.js","configureStore.js"],"names":["isDeploy","process","REACT_APP_NOT_SECRET_CODE","console","log","root","PrismService","theme","this","styleRef","document","createElement","rel","type","head","appendChild","Promise","res","rej","href","onerror","loaded","uiChangeTheme","payload","window","initialState","colors","account","userReducer","state","clubInfo","uiReducer","combineReducers","form","formReducer","user","ui","logger","value","repeat","JSON","stringify","syncValidator","schema","formValues","props","context","validateSync","abortEarly","errors","resultErrors","inner","forEach","error","test","path","set","message","required","undefined","minLength","min","regexMin","RegExp","regexValue","regexLength","length","replace","minValue","tooYoung","age","regexAge","aol","alphaNumeric","russianPhoneNumberPattern","pattern","asyncValidate","values","dispatch","blurredField","ms","resolve","setTimeout","then","username","includes","asyncErrors","checkUserName","email","checkUserEmail","checkUserAge","userAccount","firstName","lastName","anniversaryDate","sex","employed","favoriteColor","bio","userClubInfo","clubName","members$","hobbies$","Page","children","RenderField","input","label","meta","asyncValidating","touched","warning","noValidate","onDestoy","blockInput","isCheckRadio","isSelect","isInput","isRadio","isTextArea","invalid","isWarning","valid","id","Math","random","toString","slice","useEffect","className","htmlFor","style","position","left","right","top","bottom","zIndex","placeholder","role","validationSchema","yup","shape","max","typeError","positive","integer","warningSchema","reduxForm","validate","warn","handleSubmit","pristine","reset","submitting","onSubmit","Field","name","component","disabled","onClick","listing","isNaN","Number","warnings","maxLength15","regexMax","maxLength","minLength2","userNameRequired","userNameAlphaNumeric","phoneNumberRequired","userRussianPhoneNumberPattern","userEmail","userDeprecetedMail","userEmailRequired","minValue13","userTooYoung","userAgeRequired","ageNumber","number","asyncBlurFields","persistentSubmitErrors","asyncChangeFields","ErrorMessage","userState","getUserAccount","createSelector","getUserColors","getUserClubInfo","agreement","InitializeFromState","load","isAccount","Object","keys","mockUserAccount","map","color","i","key","enableReinitialize","connect","initialValues","nickname","when","nicknameRequired","hasEmail","is","otherwise","SelectingFormValues","hasEmailValue","favoriteColorValue","resetSection","memorizedDestroyEmail","useCallback","height","width","margin","backgroundColor","selector","formValueSelector","touchOnChange","RenderHobbies","fields","maxHobbiesLength","push","hobby","index","title","remove","aria-hidden","Member","member","hobbies","moveCard","endDrag","beginDrag","highLight","fieldsLength","ref","useRef","useDrop","accept","MemberTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","end","begin","collectedProps","drag","opacity","isMobile","move","icon","faArrowUp","faArrowDown","faTimes","fontSize","b","target","FieldArray","of","RenderMembers","submitFailed","allFields","getAll","useState","setIsDragging","setHoverIndex","swap","FieldArraysForm","mockUserClubInfo","membersArrayWarnings","memberIndex","memberWarnings","_warning","ShowCaseButton","text","getTheme","uiState","onChangeTheme","changeTheme","catch","uiChangeThemeInDome","codeListining","show","setShow","handleClose","Modal","dialogClassName","onHide","Header","closeButton","Container","fluid","Row","Col","xs","Title","faFillDrip","Body","Footer","Button","variant","Wrapper","codeListening","lang","App","setNicknameRequired","nickRequired","submit","SimpleFormListing","obj","store","middlewares","thunk","createStore","reducer","composeWithDevTools","applyMiddleware","configureStore","AppBundle","backend","TouchBackend","HTML5Backend","ReactDOM","render","getElementById"],"mappings":"0aAAMA,EAAYC,wFAAYC,0BAE9BC,QAAQC,IAAI,WAAYJ,GAExB,IAAMK,EAAOL,EAAW,mBAAqB,GAExBM,E,yGAKAC,GAAQ,IAAD,OAaxB,OAPKC,KAAKC,WACRD,KAAKC,SAAWC,SAASC,cAAc,QACvCH,KAAKC,SAASG,IAAI,aAClBJ,KAAKC,SAASI,KAAO,WACrBH,SAASI,KAAKC,YAAYP,KAAKC,WAG1B,IAAIO,SAAQ,SAACC,EAAKC,GACvB,EAAKT,SAASU,KAAd,UAAwBd,EAAxB,kCAAsDE,EAAtD,QAMAU,EAAIV,GAEJ,EAAKE,SAASW,QAAU,kBAAMF,Y,KA3BfZ,EACZG,SAAW,KADCH,EAEZe,OAAS,GCNX,IAYMC,EAAgB,SAACf,GAAD,MAAY,CACvCM,KAb6B,kBAc7BU,QAAS,CACPhB,W,yjBAIJiB,OAAOH,OAASf,EAAae,OCnB7B,IAAMI,EAAe,CACnBC,OAAQ,CAAC,MAAO,SAAU,SAAU,QAAS,OAAQ,SAAU,UAC/DC,QAAS,IA2BIC,EAxBK,WAA8C,IAA7CC,EAA4C,uDAApCJ,EAAoC,yCAApBZ,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,QACjD,OAAQV,GAEN,ICV6B,oBDUS,IAC5Bc,EAAYJ,EAAZI,QACR,OAAO,EAAP,GACKE,EADL,CAEEF,YAIJ,ICjBkC,yBDiBS,IACjCG,EAAaP,EAAbO,SACR,OAAO,EAAP,GACKD,EADL,CAEEC,aAIJ,QACE,OAAOD,I,yjBEzBb,IAAMJ,EAAe,CACnBlB,MAAO,iBAmBMwB,EAhBG,WAA8C,IAA7CF,EAA4C,uDAApCJ,EAAoC,yCAApBZ,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,QAC/C,OAAQV,GAEN,IHP2B,kBGOS,IAC1BN,EAAUgB,EAAVhB,MACR,OAAO,KACFsB,EADL,CAEEtB,UAIJ,QACE,OAAOsB,ICXEG,4BAAgB,CAC7BC,KAAMC,IACNC,KAAMP,EACNQ,GAAIL,I,4BCROM,G,qBAAS,SAAAC,GACpBnC,QAAQC,IAAI,IAAImC,OAAO,KACvBpC,QAAQC,IAAIoC,KAAKC,UAAUH,EAAO,KAAM,IACxCnC,QAAQC,IAAI,IAAImC,OAAO,O,0kBCFlB,IAkCMG,EAAgB,SAAAC,GAAM,OAAI,SAACC,EAAYC,GAClD,IAAMC,EAAUD,EAAMC,SAAW,GACjC,IAGE,OAFAH,EAAOI,aAAaH,EAAY,CAAEI,YAAY,EAAOF,YAE9C,GACP,MAAOG,GAEP,IAAIC,EAAe,GA0BnB,OAxBAD,EAAOE,MAAMC,SAAQ,SAACC,GAIhB,KAAKC,KAAKD,EAAME,MAId,MAAMD,KAAKD,EAAME,MACnBC,IAAIN,EAAcG,EAAME,KAAO,WAAYF,EAAMI,SAGxC,YAAYH,KAAKD,EAAME,OAChCC,IAAIN,EAAcG,EAAME,KAAMF,EAAMI,SAItCD,IAAIN,EAAcG,EAAME,KAAMF,EAAMI,YAOjCP,KAIEQ,EAAW,eAACD,EAAD,uDAAW,WAAX,OAA0B,SAAAnB,GAAK,OACrDA,OAAQqB,EAAYF,IAmBTG,EAAY,SAACC,GAAD,IAAMJ,EAAN,uDAAgB,oCAAhB,OACvB,WAAiB,IAAhBnB,EAAe,uDAAP,GAEDwB,EAAW,IAAIC,OAAO,WAAY,MAElCC,EAAa,IAAID,OAAO,aAAc,MAEtCE,EAAc,IAAIF,OAAO,cAAe,MAE9C,OAAOzB,EAAM4B,OAASL,EAAMJ,EACzBU,QAAQL,EAAUD,GAClBM,QAAQH,EAAY1B,GACpB6B,QAAQF,EAAa3B,EAAM4B,aAAUP,IAW/BS,EAAW,SAACP,GAAD,IAAMJ,EAAN,uDAAgB,0BAAhB,OAA8C,SAAAnB,GAEpE,IAAMwB,EAAW,IAAIC,OAAO,WAAY,MAElCC,EAAa,IAAID,OAAO,aAAc,MAE5C,OAAOzB,GAASA,EAAQuB,EAAMJ,EAC3BU,QAAQL,EAAUD,GAClBM,QAAQH,EAAY1B,QAASqB,IASrBU,EAAW,eAACC,EAAD,uDAAO,EAAGb,EAAV,uDAAoB,+CAApB,OACtB,SAAAnB,GAEE,IAAMiC,EAAW,IAAIR,OAAO,WAAY,MACxC,OAAOzB,GAASA,EAAQgC,EACpBb,EAAQU,QAAQI,EAAUD,QAC1BX,IAGKa,EAAM,eAACf,EAAD,uDAAW,4CAAX,OAA2D,SAAAnB,GAAK,OACjFA,GAAS,cAAcgB,KAAKhB,GACxBmB,OACAE,IAEOc,EAAe,eAAChB,EAAD,uDAAW,+BAAX,OAC1B,SAAAnB,GAAK,OAAIA,GAAS,iBAAiBgB,KAAKhB,GACpCmB,OACAE,IAEOe,EAA4B,eACvCC,EADuC,uDAC7B,qBAEVlB,EAHuC,uDAG7B,uEAH6B,OAKvC,SAACnB,GAEC,IAAM2B,EAAc,IAAIF,OAAO,eAAgB,MAC/C,OAAOzB,IAAU,oDAAoDgB,KAAKhB,GACtEmB,EAAQU,QAAQF,EAAaU,QAC7BhB,IA2BKiB,EAAgB,SAACC,EAAQC,EAAUjC,EAAOkC,GAErD,OADA5E,QAAQC,IAAIyC,IDhMOmC,ECiMN,IDjMY,IAAIhE,SAAQ,SAAAiE,GAAO,OAAIC,WAAWD,EAASD,OCiMjDG,MAAK,WACD,aAAjBJ,GA1Bc,SAACK,EAAUvC,GAC/B,GAAI,CAAC,OAAQ,OAAQ,SAAU,SAASwC,SAASD,GAE/C,MAAM,KAAKvC,EAAMyC,YAAjB,CAA8BF,SAAU,2BAwBtCG,CAAcV,EAAOO,SAAUvC,GAGZ,UAAjBkC,GAvBe,SAACS,EAAO3C,GAC7B,GAAI,CAAC,gBAAiB,gBAAiB,kBAAmB,kBACvDwC,SAASG,GAEV,MAAM,KAAK3C,EAAMyC,YAAjB,CAA8BE,MAAO,gCAoBnCC,CAAeZ,EAAOW,MAAO3C,GAGV,QAAjBkC,GAnBa,SAACT,EAAKzB,GACzB,GAAIyB,EAAM,GAER,MAAM,KAAKzB,EAAMyC,YAAjB,CAA8BhB,IAAK,yBAiBjCoB,CAAab,EAAOP,IAAKzB,MD3MV,IAAAmC,GEARW,EAAc,CAEvBC,UAAW,OACXC,SAAU,MACVvB,IAAK,KACLwB,gBAAiB,aACjBC,IAAK,SACLC,UAAU,EACVC,cAAe,OACfC,IAAK,qCAGIC,EAAe,CACxBC,SAAU,wBACVC,SAAU,CACN,CACIT,UAAW,OACXC,SAAU,MACVS,SAAU,CACN,UACA,aAGR,CACIV,UAAW,MACXC,SAAU,YACVS,SAAU,CACN,QACA,UACA,cCpBDC,EAPD,SAAC,GAIX,OAAOC,EAJmB,EAAdA,WACC,SAAA3B,GACbxC,EAAOwC,O,yBCFE4B,EAAc,SAAC,GASrB,IARLD,EAQI,EARJA,SACAE,EAOI,EAPJA,MACAC,EAMI,EANJA,MAMI,IALJC,KAAQC,EAKJ,EALIA,gBAAiBC,EAKrB,EALqBA,QAASzD,EAK9B,EAL8BA,MAAO0D,EAKrC,EALqCA,QACzCC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACApG,EAEI,EAFJA,KACAqG,EACI,EADJA,WAEMC,EAAe,iBAAiB7D,KAAKzC,GACrCuG,EAAoB,WAATvG,EACXwG,EAAU,mDAAmD/D,KAAKzC,GAClEyG,EAAmB,UAATzG,EACV0G,EAAsB,aAAT1G,EACb2G,GAAWR,GAAcF,GAAWzD,EACpCoE,GAAaT,GAAcF,GAAWC,IAAYS,EAClDE,GAASV,GAAcF,IAAYU,EACnCG,EAAKC,KAAKC,OAAO,IAAIC,WAAWC,MAAM,GAQ5C,OANAC,qBAAU,WACR,OAAO,WACLf,GAAYA,OAEb,CAACA,IAGF,yBAAKgB,WACFpB,EAAkB,qBAAuB,IAC1C,gBACCM,EAAe,eAAiB,MAE/BA,GAAgB,2BAAOe,QAASP,GAAKhB,GACvC,yBAAKwB,MAAO,CAAEC,SAAU,aACrBlB,GAAc,yBAAKiB,MAAO,CACzBC,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRC,OAAQ,QAETpB,GAAW,yCACVM,GAAIA,EACJM,YACIX,GAAWE,EAAU,eAAiB,OACtCF,GAAWI,EAAQ,aAAe,MAClCP,EAAkC,qBAAnB,kBACjB,oBAEET,EARM,CASVgC,YAAa/B,EACb9F,KAAMA,KAEPuG,GAAY,0CACXO,GAAIA,EACJM,WACGT,EAAU,eAAiB,MAC3BE,EAAQ,aAAe,KACxB,kBACEhB,GAEHF,GAGFe,GAAc,4CACbI,GAAIhB,EACJsB,WACGT,EAAU,eAAiB,MAC3BE,EAAQ,aAAe,KACxB,kBACEhB,IAGLS,GAAgB,2BACfc,UAAU,mBACVC,QAASP,GAAKhB,GAGhB,yBAAKsB,UAAU,iBAAiBU,KAAK,UACnC,0BAAMV,UAAU,WAAhB,gBAGAX,GAAWE,GAAW,yBAAKS,UAAU,oBAAoB5E,IACzDiE,GAAWG,GAAa,+BAAQV,MChFpC6B,EAAmBC,WAAaC,MAAM,CAC1C1D,SAAUyD,WAEPnF,SAAS,YAETqF,IAAI,GAAI,qCACXvD,MAAOqD,WAEJnF,SAAS,YACT8B,MAAM,yBACTlB,IAAKuE,WAEFG,UAAU,6BACVtF,SAAS,YACTuF,SAAS,sCACTC,QAAQ,qCACRrF,IAAI,GAAI,8CAGPsF,GAAgBN,WAAaC,MAAM,CACvCxE,IAAKuE,WAEFhF,IAAI,GAAI,kCAgDEuF,eAAU,CACvBnH,KAAM,oBACNoH,SAAU3G,EAAckG,GACxBU,KAAM5G,EAAcyG,KAHPC,EA3Ce,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC9D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,WAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,SAGV,6BACE,4BAAQ9F,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBCoEOL,eAAU,CAAEnH,KAAM,UAAlBmH,EArII,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACnD,OAAO,0BACLzB,UAAU,OACVjB,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,cACb,2BAAOC,QAAQ,aAAf,cACA,kBAAC0B,EAAA,EAAD,CACEjC,GAAG,YACHe,YAAY,aACZT,UAAU,eACV4B,KAAK,YACLC,UAAU,QACVjJ,KAAK,UAIT,yBAAKoH,UAAU,mBACb,2BAAOC,QAAQ,YAAf,aACA,kBAAC0B,EAAA,EAAD,CACEjC,GAAG,WACHe,YAAY,YACZT,UAAU,eACV4B,KAAK,WACLC,UAAU,QACVjJ,KAAK,UAGT,yBAAKoH,UAAU,mBACb,2BAAOC,QAAQ,SAAf,SACA,kBAAC0B,EAAA,EAAD,CACEjC,GAAG,QACHe,YAAY,QACZT,UAAU,eACV4B,KAAK,QACLC,UAAU,QACVjJ,KAAK,WAGT,6BACE,sCACA,yBAAKoH,UAAU,yBACb,kBAAC2B,EAAA,EAAD,CACEjC,GAAG,OACHM,UAAU,mBACV4B,KAAK,MACLC,UAAU,QACVjJ,KAAK,QACLyB,MAAM,SACR,2BACE2F,UAAU,mBACVC,QAAQ,QAFV,SAIF,yBAAKD,UAAU,yBACb,kBAAC2B,EAAA,EAAD,CACEjC,GAAG,SACHM,UAAU,mBACV4B,KAAK,MACLC,UAAU,QACVjJ,KAAK,QACLyB,MAAM,WACR,2BACE2F,UAAU,mBACVC,QAAQ,UAFV,WAIF,yBAAKD,UAAU,yBACb,kBAAC2B,EAAA,EAAD,CACEjC,GAAG,QACHM,UAAU,mBACV4B,KAAK,MACLC,UAAU,QACVjJ,KAAK,QACLyB,MAAM,UACR,2BACE2F,UAAU,mBACVC,QAAQ,SAFV,WAMJ,yBAAKD,UAAU,mBACb,2BAAOC,QAAQ,iBAAf,kBACA,6BACE,kBAAC0B,EAAA,EAAD,CACE3B,UAAU,eACVN,GAAG,gBACHkC,KAAK,gBACLC,UAAU,UACV,iCACA,4BAAQxH,MAAM,UAAd,OACA,4BAAQA,MAAM,UAAd,SACA,4BAAQA,MAAM,UAAd,WAKN,yBAAK2F,UAAU,yBACb,kBAAC2B,EAAA,EAAD,CACEjC,GAAG,WACHM,UAAU,mBACV4B,KAAK,WACLC,UAAU,QACVjJ,KAAK,aACP,2BACEoH,UAAU,mBACVC,QAAQ,YAFV,aAKF,yBAAKD,UAAU,cACb,2BAAOC,QAAQ,SAAf,SACA,6BACE,kBAAC0B,EAAA,EAAD,CACE3B,UAAU,eACVN,GAAG,QACHkC,KAAK,QACLC,UAAU,eAIhB,yBAAK7B,UAAU,QACb,4BACEpH,KAAK,SACLkJ,SAAUP,GAAYE,EACtBzB,UAAU,qBAHZ,UAKA,4BACEpH,KAAK,SACLkJ,SAAUP,GAAYE,EAAYM,QAASP,EAC3CxB,UAAU,sBAHZ,cAUOgC,GAAO,6gHCzELb,eAAU,CACvBnH,KAAM,iBACNoH,SA/De,SAAAxE,GACf,IAAM5B,EAAS,GAkBf,OAjBK4B,EAAOO,SAEDP,EAAOO,SAASlB,OAAS,KAClCjB,EAAOmC,SAAW,iCAFlBnC,EAAOmC,SAAW,WAIfP,EAAOW,MAEA,4CAA4ClC,KAAKuB,EAAOW,SAClEvC,EAAOuC,MAAQ,yBAFfvC,EAAOuC,MAAQ,WAIZX,EAAOP,IAED4F,MAAMC,OAAOtF,EAAOP,MAC7BrB,EAAOqB,IAAM,mBACJ6F,OAAOtF,EAAOP,KAAO,KAC9BrB,EAAOqB,IAAM,4CAJbrB,EAAOqB,IAAM,WAMRrB,GA6CPqG,KA1CW,SAAAzE,GACX,IAAMuF,EAAW,GAIjB,OAHIvF,EAAOP,IAAM,KACf8F,EAAS9F,IAAM,gCAEV8F,IAkCMhB,EA/BY,SAAC,GAAiD,IAAhDG,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAC1D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GACV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CAAOC,KAAK,QAAQhJ,KAAK,QAAQiJ,UAAWrD,EAAaE,MAAM,WAEjE,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CAAOC,KAAK,MAAMhJ,KAAK,SAASiJ,UAAWrD,EAAaE,MAAM,SAEhE,6BACE,4BAAQ9F,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBCxCFY,GP8DmB,SAACtB,GAAD,IAAMtF,EAAN,uDAAgB,oCAAhB,OACvB,SAACnB,GAEC,IAAMgI,EAAW,IAAIvG,OAAO,WAAY,MAElCC,EAAa,IAAID,OAAO,aAAc,MAEtCE,EAAc,IAAIF,OAAO,cAAe,MAE9C,OAAOzB,GAASA,EAAM4B,OAAS6E,EAAMtF,EAClCU,QAAQmG,EAAUvB,GAClB5E,QAAQH,EAAY1B,GACpB6B,QAAQF,EAAa3B,EAAM4B,aAAUP,GO1ExB4G,CAAU,GAAI,uGAE5BC,GAAa5G,EAAU,EAAG,uGAC1B6G,GAAmB/G,EAAS,wBAC5BgH,GAAuBjG,EAAa,wDACpCkG,GAAsBjH,EAAS,4BAC/BkH,GAAgClG,IAChCmG,GP0Ge,eAACpH,EAAD,uDAAW,wBAAX,OAAuC,SAAAnB,GAAK,OAC/DA,IAAU,4CAA4CgB,KAAKhB,GACvDmB,OACAE,GO7GY6B,GACZsF,GAAqBtG,IACrBuG,GAAoBrH,EAAS,qBAC7BsH,GAAa5G,EAAS,IAEtB6G,GAAe5G,EAAS,GAAI,0EAC5B6G,GAAkBxH,EAAS,mBAC3ByH,GP+EgB,eAAC1H,EAAD,uDAAW,mBAAX,OAAkC,SAAAnB,GAEtD,IAAM0B,EAAa,IAAID,OAAO,aAAc,MAC5C,OAAOzB,GAAS4H,MAAMC,OAAO7H,IAAUmB,EAAQU,QAAQH,EAAY1B,QAASqB,GOlF5DyH,GA6DHhC,eAAU,CACvBnH,KAAM,wBADOmH,EA1Dc,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,WACN0C,SAAU,CAACoB,GAAkBJ,GAAaG,IAC1ClB,KAAMoB,MAIV,yBAAKzC,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,QACN0C,SAAU,CAAC0B,GAAmBF,IAC9BvB,KAAMwB,MAGV,yBAAK7C,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,MACN0C,SAAU,CAAC6B,GAAiBC,GAAWH,IACvC1B,KAAM2B,MAGV,yBAAKhD,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eACN0C,SAAU,CAACsB,GAAqBC,OAGpC,6BACE,4BAAQ/J,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBC/DFe,GAAa5G,EAAU,EAAG,uGAE1B8G,GAAuBjG,EAAa,wDACpCkG,GAAsBjH,EAAS,4BAC/BkH,GAAgClG,IAEhCoG,GAAqBtG,IACrBuG,GAAoBrH,EAAS,qBAC7BsH,GAAa5G,EAAS,IAEtB6G,GAAe5G,EAAS,GAAI,0EAC5B6G,GAAkBxH,EAAS,mBAG3BkF,GAAmBC,WAAaC,MAAM,CAC1C1D,SAAUyD,WAEPnF,SAAS,wBAETqF,IAAI,GAAI,qCACXvD,MAAOqD,WAEJrD,MAAM,yBACTlB,IAAKuE,WAGFG,UAAU,6BACVC,SAAS,sCACTC,QAAQ,uCA+DEE,eAAU,CACvBnH,KAAM,sBACNoH,SAAU3G,EAAckG,KAFXQ,EA1Da,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC5D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,WACN0C,SAAU,CAAEmB,IACZlB,KAAMoB,MAIV,yBAAKzC,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,QACN0C,SAAU,CAAC0B,IACXzB,KAAMwB,MAGV,yBAAK7C,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,MACN0C,SAAU,CAAC6B,GAAiBF,IAC5B1B,KAAM2B,MAGV,yBAAKhD,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eACN0C,SAAU,CAACsB,GAAqBC,OAGpC,6BACE,4BAAQ/J,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBClGFb,GAAmBC,WAAaC,MAAM,CAC1C1D,SAAUyD,WAEPnF,SAAS,YAETqF,IAAI,GAAI,qCAERlF,IAAI,EAAG,qCACV2B,MAAOqD,WAEJnF,SAAS,YACT8B,MAAM,yBACTlB,IAAKuE,WAEFG,UAAU,6BACVtF,SAAS,YACTuF,SAAS,sCACTC,QAAQ,uCA8CEE,eAAU,CACvBnH,KAAM,sBACNoH,SAAU3G,EAAckG,IACxBhE,cAAeA,EACfyG,gBAAiB,CAAC,WAAY,QAAS,OACvCC,wBAAwB,GALXlC,EA3Ca,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC5D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,WAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,SAGV,6BACE,4BAAQ9F,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBCvDFb,GAAmBC,WAAaC,MAAM,CAC1C1D,SAAUyD,WAEPnF,SAAS,YAETqF,IAAI,GAAI,qCAERlF,IAAI,EAAG,qCACV2B,MAAOqD,WAEJnF,SAAS,YACT8B,MAAM,yBACTlB,IAAKuE,WAEFG,UAAU,6BACVtF,SAAS,YACTuF,SAAS,sCACTC,QAAQ,uCA8CEE,eAAU,CACvBnH,KAAM,wBACNoH,SAAU3G,EAAckG,IACxBhE,cAAeA,EACf2G,kBAAmB,CAAC,WAAY,QAAS,OACzCD,wBAAwB,GALXlC,EA3Ce,SAAC,GAAmD,IAAjDG,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC9D,OACE,0BACE1C,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,WAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,SAGV,6BACE,4BAAQ9F,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBCtDO+B,I,OAHM,SAAC,GAAD,IAAG5E,EAAH,EAAGA,KAAH,OACnB,yBAAKqB,UAAU,iBAAiBrB,EAAKvD,OAASuD,EAAKE,SAAW,mC,SCHnD2E,GAAY,SAAA5J,GAAK,OAAIA,EAAMM,MAE3BuJ,GAAiBC,aAC5BF,IACA,SAAAA,GAAS,OAAIA,EAAU9J,WAGZiK,GAAgBD,aAC3BF,IACA,SAAAA,GAAS,OAAIA,EAAU/J,UAGZmK,GAAkBF,aAC7BF,IACA,SAAAA,GAAS,OAAIA,EAAU3J,YCLnB8G,GAAmBC,WAAaC,MAAM,CAC1ClD,UAAWiD,WAERnF,SAAS,YAETqF,IAAI,GAAI,qCACXlD,SAAUgD,WAEPnF,SAAS,YACZY,IAAKuE,WAEFG,UAAU,6BACVtF,SAAS,YACTuF,SAAS,sCACTC,QAAQ,qCACRrF,IAAI,GAAI,4CACXkC,IAAK8C,WAEFnF,SAAS,YACZuC,cAAe4C,WAEZnF,SAAS,YACZoI,UAAWjD,YAERvF,KACC,eACA,YACA,SAAAhB,GAAK,QAAMA,OAIbyJ,GAAsB,YAQnB,IAPLrK,EAOI,EAPJA,OACA6H,EAMI,EANJA,aACAyC,EAKI,EALJA,KACAxC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACA/D,EACI,EADJA,YAEMsG,IAAcC,OAAOC,KAAKxG,GAAazB,OAC7C,OACE,oCACE,6BACE,4BAAQ+D,UAAU,oBAAoBpH,KAAK,SAASmJ,QAAS,kBAAMgC,EAAKI,KAAxE,iBAIF,0BACEpF,YAAU,EACV2C,SAAUJ,GAEV,8BAAUQ,UAAWkC,GAAavC,GAChC,yBAAKzB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,YACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,gBAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,SAGV,yBAAKsB,UAAU,QACb,sCACA,kBAAC2B,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,QACLyB,MAAM,OACNwH,UAAWrD,EACXE,MAAM,SACR,kBAACiD,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,QACLyB,MAAM,SACNwH,UAAWrD,EACXE,MAAM,WACR,kBAACiD,EAAA,EAAD,CACEC,KAAK,MACLhJ,KAAK,QACLyB,MAAM,QACNwH,UAAWrD,EACXE,MAAM,UAER,kBAACiD,EAAA,EAAD,CAAOC,KAAK,MAAMC,UAAW0B,MAG/B,yBAAKvD,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEjD,MAAM,iBACNkD,KAAK,gBACLhJ,KAAK,SACLiJ,UAAWrD,GACX,iCACC/E,GAAUA,EAAO2K,KAAI,SAACC,EAAOC,GAAR,OACpB,4BAAQC,IAAKF,EAAQC,EAAGjK,MAAOgK,GAAQA,QAK7C,yBAAKrE,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACE5C,YAAU,EACV6C,KAAK,WACLhJ,KAAK,WACLiJ,UAAWrD,EACXE,MAAM,cAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACE5C,YAAU,EACV6C,KAAK,MACLhJ,KAAK,WACLiJ,UAAWrD,EACXE,MAAM,SAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,YACLhJ,KAAK,WACLiJ,UAAWrD,EACXE,MAAM,uCAGV,6BACE,4BAAQ9F,KAAK,SAASoH,UAAU,oBAAoB8B,SAAUL,GAA9D,UAGA,4BAAQ7I,KAAK,SAASoH,UAAU,qBAAqB8B,SAAUP,GAAYE,EAAYM,QAASP,GAAhG,qBAiBZsC,GAAsB3C,YAAU,CAC9BnH,KAAM,sBACNoH,SAAU3G,EAAckG,IACxB6D,oBAAoB,GAHArD,CAInB2C,IAOYA,OALfA,GAAsBW,aAZE,SAAA7K,GAAK,MAAK,CAChCH,OAAQkK,GAAc/J,GACtB8D,YAAa+F,GAAe7J,GAC5B8K,cAAejB,GAAe7J,MAW9B,CAAEmK,KjBlL2B,SAACrK,GAAD,MAAc,CAC3Cd,KAJ+B,oBAK/BU,QAAS,CAAEI,ciB8KS+K,CAGpBX,I,UC9KInD,GAAmBC,WAAaC,MAAM,CAC1C8D,SAAU/D,WAEPgE,KAAK,qBAAqB,SAACC,EAAkBnK,GAAnB,OACLA,EAAOe,SAAS,eACxCkC,UAAWiD,WAERnF,SAAS,YAETqF,IAAI,GAAI,qCACXlD,SAAUgD,WAEPnF,SAAS,YACZqJ,SAAUlE,YAEVrD,MAAOqD,WAEJrD,MAAM,iBACNqH,KAAK,WAAY,CAChBG,IAAI,EACJ7H,KAAM0D,WAAanF,SAAS,YAC5BuJ,UAAWpE,aAEf5C,cAAe4C,WAEZnF,SAAS,YACZoI,UAAWjD,YAERvF,KACC,eACA,YACA,SAAAhB,GAAK,QAAMA,OAIb4K,GAAsB,YAUnB,IATLxL,EASI,EATJA,OACA6H,EAQI,EARJA,aACA4D,EAOI,EAPJA,cACAC,EAMI,EANJA,mBACWN,EAKP,EALJhK,QAAWgK,iBACXtD,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACA2D,EACI,EADJA,aAEMC,EAAwBC,uBAAY,WAAQF,EAAa,WAAY,CAACA,IAC5E,OACE,oCACE,0BACErG,YAAU,EACV2C,SAAUJ,GAEV,8BAAUQ,SAAUL,GAClB,yBAAKzB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACE5C,YAAa8F,EACbjD,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,YACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,gBAIV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACE5C,YAAU,EACV6C,KAAK,WACLhJ,KAAK,WACLiJ,UAAWrD,EACXE,MAAM,gBAGTwG,GAAiB,yBAAKlF,UAAU,QAC/B,kBAAC2B,EAAA,EAAD,CACE3C,SAAUqG,EACVzD,KAAK,QACLhJ,KAAK,QACLiJ,UAAWrD,EACXE,MAAM,WAGV,yBAAKsB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEjD,MAAM,iBACNkD,KAAK,gBACLhJ,KAAK,SACLiJ,UAAWrD,GACX,iCACC/E,GAAUA,EAAO2K,KAAI,SAACC,EAAOC,GAAR,OACpB,4BAAQC,IAAKF,EAAQC,EAAGjK,MAAOgK,GAAQA,QAK5Cc,GACC,yBACEjF,MAAO,CACLqF,OAAQ,GACRC,MAAO,IACPC,OAAQ,YACRC,gBAAiBP,KAKvB,yBAAKnF,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,YACLhJ,KAAK,WACLiJ,UAAWrD,EACXE,MAAM,uCAGV,6BACE,4BACE9F,KAAK,SACLoH,UAAU,oBACV8B,SAAUL,GAHZ,UAMA,4BACE7I,KAAK,SACLoH,UAAU,qBACV8B,SAAUP,GAAYE,EACtBM,QAASP,GAJX,qBAcNmE,GAAWC,aAAkB,uBAQnCX,GAAsB9D,YAAU,CAC9BnH,KAAM,sBACNoH,SAAU3G,EAAckG,IACxBkF,eAAe,GAHK1E,CAInB8D,IAOYA,OAJfA,GAAsBR,aAbE,SAAA7K,GAAK,MAAK,CAChCH,OAAQkK,GAAc/J,GACtBsL,cAAeS,GAAS/L,EAAO,YAC/BuL,mBAAoBQ,GAAS/L,EAAO,oBAUhB6K,CAEpBQ,I,oBCjLa,GACL,SCyCKa,GArCO,SAAC,GAAwE,IAAtE7G,EAAqE,EAArEA,WAAY8G,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,iBAAiD,IAA/BrH,KAAQvD,EAAuB,EAAvBA,MAAO0D,EAAgB,EAAhBA,QAC5E,OAAQ,wBAAIkB,UAAU,cACpB,wBAAIA,UAAU,kCACZ,4BACE8B,SAAUiE,EAAO9J,QAAU+J,EAC3BhG,UAAU,oBACVpH,KAAK,SACLmJ,QAAS,kBAAMgE,EAAOE,SAJxB,aAQC7K,GAAS,yBAAK4E,UAAU,iBAAiB5E,GACzC0D,GAAW,yBAAKkB,UAAU,mBAAmBlB,IAG/CiH,EAAO3B,KAAI,SAAC8B,EAAOC,GAAR,OACV,wBAAInG,UAAU,kBAAkBuE,IAAK4B,GACnC,4BACEnG,UAAU,QACVpH,KAAK,SACLwN,MAAM,eACNrE,QAAS,kBAAMgE,EAAOM,OAAOF,KAE7B,0BAAMG,cAAY,QAAlB,SAEF,kBAAC3E,EAAA,EAAD,CACE1C,WAAYA,EACZ2C,KAAMsE,EACNtN,KAAK,OACLiJ,UAAWrD,EACXE,MAAK,iBAAYyH,EAAQ,W,oCCxB/BI,GCEW,SAAC,GAaT,IAZLC,EAYI,EAZJA,OACAL,EAWI,EAXJA,MACAJ,EAUI,EAVJA,OACApI,EASI,EATJA,UACAC,EAQI,EARJA,SACAoI,EAOI,EAPJA,iBACAS,EAMI,EANJA,QACAC,EAKI,EALJA,SACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACA3H,EAEI,EAFJA,WACA4H,EACI,EADJA,UAEMC,EAAef,EAAO9J,OACtB8K,EAAMC,iBAAO,MAFf,EAGaC,YAAQ,CACvBC,OAAQC,GACRC,MAFuB,SAEjBC,EAAMC,GACV,GAAKP,EAAIQ,QAAT,CAGA,IAAMC,EAAYH,EAAKlB,MACjBsB,EAAatB,EAEnB,GAAIqB,IAAcC,EAAlB,CAIA,IAAMC,EAAoBX,EAAIQ,QAAQI,wBAEhCC,GACHF,EAAkBnH,OAASmH,EAAkBpH,KAAO,EAIjDuH,EAFeP,EAAQQ,kBAEKC,EAAIL,EAAkBpH,IAKpDkH,EAAYC,GAAcI,EAAeD,GAIzCJ,EAAYC,GAAcI,EAAeD,IAI7ClB,EAASc,EAAWC,GAKpBJ,EAAKlB,MAAQsB,QAtCRO,EAHL,sBA4C2BC,YAAQ,CACrCZ,KAAM,CAAEzO,KAAMuO,GAAoBhB,SAClC+B,QAAS,SAAAZ,GACP,MAAO,CACLa,WAAYb,EAAQa,eAGxBC,IAAK,kBAAMzB,GAAQ,IACnB0B,MAAO,kBAAMzB,GAAU,MApDrB,mBA4CG0B,EA5CH,KA4CmBC,EA5CnB,KAsDIJ,EAAeG,EAAfH,WAIR,OAFArB,EAAe,GAAKyB,EAAKP,EAAKjB,IAG5B,yBAAKA,IAAKA,EAAK7G,MAAO,CAAEsI,QAJG,IAKzB,wBACExI,WAAY6G,EAAY,mBAAqB,IAAM,2BAA4BtC,IAAK4B,GACpF,yBAAKnG,WAAYyI,YAAW,0BAA4B,IACtD,qBAEC3B,EAAe,GAAK,6BACnB,4BACE9G,UAAU,iBACVpH,KAAK,SACLmJ,QAAS,kBAAMgE,EAAO2C,KAAKvC,EAAiB,IAAVA,EAAcW,EAAe,EAAIX,EAAQ,KAC3E,kBAAC,KAAD,CAAiBwC,KAAMC,QAEzB,4BACE5I,UAAU,iBACVpH,KAAK,SACLmJ,QAAS,kBAAMgE,EAAO2C,KAAKvC,EAAOA,IAAUW,EAAe,EAAI,EAAIX,EAAQ,KAC3E,kBAAC,KAAD,CAAiBwC,KAAME,SAI3B,4BACE7I,UAAU,iBACVpH,KAAK,SACLwN,MAAM,gBACNrE,QAAS,kBAAMgE,EAAOM,OAAOF,KAE7B,kBAAC,KAAD,CAAiBwC,KAAMG,SAI3B,uCAAa3C,EAAQ,EACnB,yBAAKnG,UAAU,uCAAuCE,MAAO,CAC3DmE,MAAO,OACP0E,SAAU,SACRpL,EAHJ,IAGe,6BAHf,IAGuBC,IAEzB,yBAAKsC,MAAO,CAAEC,SAAU,aACtB,kBAACwB,EAAA,EAAD,CACE1C,WAAYA,EACZ2C,KAAI,UAAK4E,EAAL,cACJ5N,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eAER,kBAACiD,EAAA,EAAD,CACE1C,WAAYA,EACZ2C,KAAI,UAAK4E,EAAL,aACJ5N,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,cAGR,yBAAKsB,UAAU,QACZyG,GAAWA,EAAQrC,KAAI,SAAC4E,EAAG1E,GAAJ,OACtB,uBACE3L,IAAI,sBACJsQ,OAAO,SACP1E,IAAKyE,EAAI1E,EAAEzE,WACX3G,KAAI,0CAAqC8P,IACzC,0BAAMhJ,UAAU,4BAA4BgJ,QAIlD,kBAACE,GAAA,EAAD,CACEjK,WAAYkJ,EACZnC,iBAAkBA,EAClBpE,KAAI,UAAK4E,EAAL,aACJ3E,UAAWiE,SD5IjBH,GAAWC,aAAkB,mBAE7BjF,GAAmBC,WAEtBC,MAAM,CACL1C,SAAUyC,WAEPnF,SAAS,yBAETqF,IAAI,GAAI,qCAERlF,IAAI,EAAG,qCACVwC,SAAUwC,UAEPuI,GAAGvI,WAEDC,MAAM,CACLlD,UAAWiD,WAERnF,SAAS,0BACZmC,SAAUgD,WAEPnF,SAAS,yBACZ4C,SAAUuC,UAEPuI,GAAGvI,WAEDnF,SAAS,0BAMjBA,SAAS,yCAwChB8K,GAAS9B,aACP,SAAC7K,EAAOgB,GAAR,MAAmB,CACjB+C,UAAWgI,GAAS/L,EAAD,UAAWgB,EAAM4L,OAAjB,eACnB5I,SAAU+H,GAAS/L,EAAD,UAAWgB,EAAM4L,OAAjB,cAClBC,QAASd,GAAS/L,EAAD,UAAWgB,EAAM4L,OAAjB,iBAJZ/B,CAMP8B,IAEF,IAAM6C,GAAgB,SAAC,GAIhB,IAHLrD,EAGI,EAHJA,OACAC,EAEI,EAFJA,iBAEI,IADJrH,KAAQvD,EACJ,EADIA,MAAO0D,EACX,EADWA,QAASuK,EACpB,EADoBA,aAElBC,EAAYvD,EAAOwD,SADrB,EAEgCC,oBAAS,GAFzC,mBAEGrB,EAFH,KAEesB,EAFf,OAGgCD,mBAAS,GAHzC,mBAGG/B,EAHH,KAGeiC,EAHf,KAIEhD,EAAWpB,uBACf,SAACkC,EAAWC,GACViC,EAAcjC,GACd1B,EAAO4D,KAAKnC,EAAWC,KAGzB,CAAC6B,EAAWvD,IAEd,OACE,wBAAI/F,UAAU,cACZ,wBAAIA,UAAU,mBAEZ,4BACE8B,SAAUiE,EAAO9J,QAAU,EAC3B+D,UAAU,oBACVpH,KAAK,SACLmJ,QAAS,kBAAMgE,EAAOE,KAAK,MAJ7B,cASCoD,GAAgBjO,GAAS,yBAAK4E,UAAU,iBAAiB5E,GACzD0D,GAAW,yBAAKkB,UAAU,mBAAmBlB,IAGhD,6BACGiH,EAAO3B,KAAI,SAACoC,EAAQL,GAAT,OACV,kBAAC,GAAD,CACEU,UAAWsB,GAAchC,IAAUsB,EACnCxI,WAAYkJ,EACZvB,UAAW,kBAAM6C,GAAc,IAC/B9C,QAAS,kBAAM8C,GAAc,IAC7B/C,SAAUA,EACVV,iBAAkBA,EAClBQ,OAAQA,EACRT,OAAQA,EACRI,MAAOA,EACP5B,IAAK4B,UAObyD,GAAkB,YAOf,IANLtI,EAMI,EANJA,aACA0E,EAKI,EALJA,iBACAzE,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAsC,EACI,EADJA,KAEA,OACE,oCACE,6BACE,4BACE/D,UAAU,oBACVpH,KAAK,SACLmJ,QAAS,kBAAMgC,EAAK8F,KAHtB,mBAOF,0BACE7J,UAAU,OACVjB,YAAU,EACV2C,SAAUJ,GAEV,yBAAKtB,UAAU,QACb,kBAAC2B,EAAA,EAAD,CACEC,KAAK,WACLhJ,KAAK,OACLiJ,UAAWrD,EACXE,MAAM,eAIV,kBAACwK,GAAA,EAAD,CACElD,iBAAkBA,EAClBpE,KAAK,WACLC,UAAWuH,KAEb,yBAAKpJ,UAAU,QACb,4BACEpH,KAAK,SACLkJ,SAAUL,EACVzB,UAAU,qBAHZ,UAKA,4BACEpH,KAAK,SACLkJ,SAAUP,GAAYE,EAAYM,QAASP,EAC3CxB,UAAU,sBAHZ,aAcV4J,GAAkBzI,YAAU,CAC1BnH,KAAM,kBACNqH,KA5JW,SAACzE,GAEZ,IAAMuF,EAAW,GAMjB,GAJKA,EAAS/D,WACZ+D,EAAS/D,SAAW,IAGlBxB,EAAOwB,SAAU,CACnB,IAAM0L,EAAuB,GAC7BlN,EAAOwB,SAASjD,SAAQ,SAACqL,EAAQuD,GAC/B,IAAMC,EAAiB,GAGnBxD,GAAUA,EAAOnI,UAAYmI,EAAOnI,SAASpC,QAC3CuK,EAAOnI,SAASpC,QAAU,IACvB+N,EAAe3L,WAClB2L,EAAe3L,SAAW,IAE5B2L,EAAe3L,SAAS4L,SAAW,oCACnCH,EAAqBC,GAAeC,MAKtCF,EAAqB7N,SACvBkG,EAAS/D,SAAT,uBAAwB+D,EAAS/D,UAAa0L,IAQlD,OAJIlN,EAAOwB,UAAYxB,EAAOwB,SAASnC,QAAU,IAC/CkG,EAAS/D,SAAS6L,SAAW,yBAGxB9H,GA2HPf,SAAU3G,EAAckG,KAHRQ,CAIfyI,IAOYA,OALfA,GAAkBnF,aAVM,SAAA7K,GAAK,MAAK,CAChC8K,cAAed,GAAgBhK,MAW/B,CAAEmK,KrB3M+B,SAAClK,GAAD,MAAe,CAChDjB,KARoC,yBASpCU,QAAS,CAAEO,eqBuMK4K,CAGhBmF,I,kDEvMaM,I,cATQ,SAAC,GAAgD,IAA9C5R,EAA6C,EAA7CA,MAAO6R,EAAsC,EAAtCA,KAAMxB,EAAgC,EAAhCA,KAAgC,IAA1B5G,eAA0B,MAAhB,aAAgB,EACrE,OACE,4BAAQ/B,UAAS,wBAAmB1H,EAAnB,kBAA0CyJ,QAASA,GACjE4G,GAAQ,kBAAC,KAAD,CAAiBA,KAAMA,IAC/BwB,GAAS,IAAKA,KCJRC,GAAW1G,cAFD,SAAA9J,GAAK,OAAIA,EAAMO,MAIpC,SAAAkQ,GAAO,OAAIA,EAAQ/R,SCkFNmM,gBAPS,SAAA7K,GAAK,MAAK,CAChCtB,MAAO8R,GAASxQ,OAGS,SAAAiD,GAAQ,MAAK,CACtCyN,cAAe,SAAAhS,GAAK,OAAIuE,E3BlFS,SAACvE,GAClC,OAAO,SAACuE,GACNxE,EAAakS,YAAYjS,GACtB4E,MAAK,SAAA5E,GACJuE,EAASxD,EAAcf,OAExBkS,MAAMtS,QAAQkD,Q2B4EcqP,CAAoBnS,QAExCmM,EA/EE,SAAC,GAMX,IALL5C,EAKI,EALJA,UACA6I,EAII,EAJJA,cACAJ,EAGI,EAHJA,cACAlE,EAEI,EAFJA,MACA9N,EACI,EADJA,MACI,EACoBkR,oBAAS,GAD7B,mBACGmB,EADH,KACSC,EADT,KAGEC,EAAc,kBAAMD,GAAQ,IAQlC,OAFA1S,QAAQC,IAAIG,GAGV,6BACE,6BACE,kBAACwS,GAAA,EAAD,CACE9K,UAAU,YACV+K,gBAAgB,oBAChBJ,KAAMA,EACNK,OAAQH,GAER,kBAACC,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACC,GAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAI,IACP,kBAACT,GAAA,EAAMU,MAAP,KAAcpF,IAEhB,kBAACkF,GAAA,EAAD,KACE,yBAAKtL,UAAU,sBACb,kBAAC,GAAD,CACE+B,QAAS,kBAAMuI,EAAwB,UAAVhS,EAAoB,gBAAkB,UACnEA,MAAOA,EACPqQ,KAAM8C,YAOlB,kBAACX,GAAA,EAAMY,KAAP,KACE,yBAAK1L,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACZ6B,IAGL,yBAAK7B,UAAU,kBACb,yBAAKA,UAAU,6CACZ0K,MAKT,kBAACI,GAAA,EAAMa,OAAP,KACE,kBAACC,GAAA,EAAD,CAAQC,QAAQ,YAAY9J,QAAS8I,GAArC,YAMN,6BACE,kBAACe,GAAA,EAAD,CAAQC,QAAQ,YAAY9J,QAxDf,WACjB6I,GAAQ,GACRN,EAAchS,KAsDV,eC5DOwT,OAbf,YAAuC,IAApBvN,EAAmB,EAAnBA,SAAU6H,EAAS,EAATA,MAC3B,OACE,yBAAKpG,UAAU,oBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,6BAA6BU,KAAK,SAC9C0F,GAEF7H,K,8BCgBMkG,gBAJS,SAAA7K,GAAK,MAAK,CAChCtB,MAAO8R,GAAWxQ,MAGL6K,EAhBO,SAAC,GAGR,IAFbsH,EAEY,EAFZA,cAEY,IADZC,YACY,MADL,sBACK,IAAZ1T,MAEA,OACE,kBAAC,KAAD,CAAWuJ,UAAU,MAAM7B,UAAWgM,GACnCD,MCgHQE,OA7Gf,WAAgB,IAAD,EACmCzC,mBAAS,CAAE3E,kBAAkB,IADhE,mBACNA,EADM,KACYqH,EADZ,KAEaC,EAAiBtH,EAAnCA,iBACR,OACE,yBAAK7E,UAAU,mBACb,yBAAKA,UAAU,OAGb,yBAAKA,UAAU,UACb,kBAAC,GAAD,CAASoG,MAAM,mCACb,kBAAC,EAAD,MACG,SAAAgG,GAAM,OAAK,kBAAC,GAAD,CAAY1K,SAAU0K,OAEpC,6BACA,kBAAC,GAAD,CACE1B,cAAe,kBAAC,GAAD,CAAeqB,cAAeM,KAC7CxK,UAAW,kBAAC,GAAD,CAAYH,SAAUtH,IACjCgM,MAAM,qCAIV,kBAAC,GAAD,CAASA,MAAM,0BACb,kBAAC,EAAD,MACG,SAAAgG,GAAM,OAAK,kBAAC,GAAD,CAAqB1K,SAAU0K,OAE7C,+BAKJ,yBAAKpM,UAAU,UACb,yBAAKA,UAAU,6BAA6BU,KAAK,SAAjD,2BAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAoB1K,SAAU0K,OAE5C,6BACA,yBAAKpM,UAAU,6BAA6BU,KAAK,SAAjD,yDAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAqB1K,SAAU0K,OAE7C,6BACA,yBAAKpM,UAAU,6BAA6BU,KAAK,SAAjD,sEAGA,4BACEqB,QAAS,kBAAMmK,GAAoB,SAAAI,GAAG,MAAK,CAAEzH,kBAAmByH,EAAIzH,sBACpEjM,KAAK,SACLoH,UAAU,qBAHZ,6BAI6BmM,EAAe,WAAa,eAJzD,KAMA,kBAAC,EAAD,MACG,SAAAC,GAAM,OAAK,kBAAC,GAAD,CACVvR,QAASgK,EACTnD,SAAU0K,OAEd,8BAIF,yBAAKpM,UAAU,UACb,yBAAKA,UAAU,6BAA6BU,KAAK,SAAjD,oCAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAuB1K,SAAU0K,OAE/C,6BACA,yBAAKpM,UAAU,6BAA6BU,KAAK,SAAjD,+DAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAqB1K,SAAU0K,OAE7C,6BACA,yBAAKpM,UAAU,6BAA6BU,KAAK,SAAjD,qCAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAiBpG,iBAAiB,IAAItE,SAAU0K,OAE9D,8BAIF,yBAAKpM,UAAU,UACb,yBAAKA,UAAU,6BAA6BU,KAAK,SAAjD,2BAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAsB1K,SAAU0K,OAE9C,6BACA,yBAAKpM,UAAU,6BAA6BU,KAAK,SAAjD,iEAGA,kBAAC,EAAD,MACG,SAAA0L,GAAM,OAAK,kBAAC,GAAD,CAAuB1K,SAAU0K,OAE/C,iCC5GFG,GCNO,WAA4C,IAApB/S,EAAmB,uDAAJ,GAC9CgT,EAAc,CAACC,KAErB,MAAO,CACLF,MAAOG,sBACLC,EACAnT,EACAoT,8BACEC,kBAAe,WAAf,EAAmBL,MDFTM,GAAVP,MAEFQ,GACJ,kBAAC,IAAD,CAAaC,QAASvE,YAAWwE,IAAeC,KAC9C,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,GAAD,QAKNY,IAASC,OACPL,GACAtU,SAAS4U,eAAe,W","file":"static/js/main.73e11a58.chunk.js","sourcesContent":["const isDeploy =  process.env.REACT_APP_NOT_SECRET_CODE\r\n\r\nconsole.log('isDeploy', isDeploy)\r\n\r\nconst root = isDeploy ? '/redux-form-text' : ''\r\n\r\nexport default class PrismService {\r\n  static styleRef = null\r\n  static loaded = {}\r\n\r\n\r\n  static changeTheme(theme) {\r\n    // if (this.styleRef) {\r\n    //   document.head.removeChild(this.styleRef)\r\n    //   this.styleRef = null\r\n    // }\r\n\r\n    if (!this.styleRef) {\r\n      this.styleRef = document.createElement('link')\r\n      this.styleRef.rel='stylesheet'\r\n      this.styleRef.type = 'text/css'\r\n      document.head.appendChild(this.styleRef)\r\n    }\r\n\r\n    return new Promise((res, rej) => {\r\n      this.styleRef.href = `${root}/styles/prismjs/themes/${theme}.css`\r\n      // this.styleRef.onload = () => {\r\n      //   console.log('theme', theme)\r\n      //   this.loaded[theme] = true\r\n      //   res(theme)\r\n      // }\r\n      res(theme)\r\n\r\n      this.styleRef.onerror = () => rej()\r\n\r\n      // if (this.loaded[theme]) {\r\n      // }      \r\n    })\r\n  }\r\n}","import PrismService from \"../../services/prism.servise\";\r\n\r\nexport const UI_CHANGE_THEME = 'UI_CHANGE_THEME'\r\n\r\nexport const uiChangeThemeInDome = (theme) => {\r\n  return (dispatch) => {\r\n    PrismService.changeTheme(theme)\r\n      .then(theme => {\r\n        dispatch(uiChangeTheme(theme));\r\n      })\r\n      .catch(console.error)\r\n  };\r\n}\r\n\r\nexport const uiChangeTheme = (theme) => ({\r\n  type: UI_CHANGE_THEME,\r\n  payload: {\r\n    theme\r\n  }\r\n})\r\n\r\nwindow.loaded = PrismService.loaded\r\n","import * as actionsTypes from '../actions';\r\n\r\nconst initialState = {\r\n  colors: ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Indigo', 'Violet'],\r\n  account: {}\r\n}\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case actionsTypes.USER_DATA_SUCCESS: {\r\n      const { account } = payload\r\n      return {\r\n        ...state,\r\n        account\r\n      }\r\n    }\r\n\r\n    case actionsTypes.USER_CLUB_INFO_SUCCESS: {\r\n      const { clubInfo } = payload\r\n      return {\r\n        ...state,\r\n        clubInfo\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer","export const USER_DATA_SUCCESS = 'USER_DATA_SUCCESS'\r\nexport const USER_CLUB_INFO_SUCCESS = 'USER_CLUB_INFO_SUCCESS'\r\n\r\nexport const userDataSuccess = (account) => ({\r\n  type: USER_DATA_SUCCESS,\r\n  payload: { account }\r\n})\r\n\r\nexport const userClubInfoSuccess = (clubInfo) => ({\r\n  type: USER_CLUB_INFO_SUCCESS,\r\n  payload: { clubInfo }\r\n})\r\n","import * as actionsTypes from '../actions';\r\n\r\nconst initialState = {\r\n  theme: 'prism-okaidia'\r\n}\r\n\r\nconst uiReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n\r\n    case actionsTypes.UI_CHANGE_THEME: {\r\n      const { theme } = payload\r\n      return {\r\n        ...state,\r\n        theme\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default uiReducer","\r\nimport { combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport userReducer from './user'\r\nimport uiReducer from './ui'\r\n  \r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  user: userReducer,\r\n  ui: uiReducer\r\n})","export const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nexport const logger = value => {\r\n  console.log('='.repeat(20))\r\n  console.log(JSON.stringify(value, null, 4))\r\n  console.log('='.repeat(20))\r\n}","import { sleep } from './common'\r\nimport set from 'lodash/set'\r\n\r\nexport const asyncValidator = schema => async (formValues, props) => {\r\n  const context = props.context || {}\r\n  try {\r\n    await schema.validate(formValues, { abortEarly: false, context })\r\n\r\n    return Promise.resolve({})\r\n  } catch (errors) {\r\n    const resultErrors = errors.inner.reduce(\r\n      (errors, err) => ({\r\n        ...errors,\r\n        [err.path]: err.message\r\n      }), {})\r\n\r\n    return Promise.reject(resultErrors)\r\n  }\r\n}\r\n\r\n// export const syncValidator = schema => (formValues, props) => {\r\n//   const context = props.context || {}\r\n//   try {\r\n//     schema.validateSync(formValues, { abortEarly: false, context })\r\n\r\n//     return {}\r\n//   } catch (errors) {\r\n//     const resultErrors = errors.inner.reduce(\r\n//       (errors, err) => ({\r\n//         ...errors,\r\n//         [err.path]: err.message\r\n//       }), {})\r\n\r\n//     return resultErrors\r\n//   }\r\n// }\r\n\r\nexport const syncValidator = schema => (formValues, props) => {\r\n  const context = props.context || {}\r\n  try {\r\n    schema.validateSync(formValues, { abortEarly: false, context })\r\n\r\n    return {}\r\n  } catch (errors) {\r\n    // console.log('errors', errors)\r\n    let resultErrors = {}\r\n\r\n    errors.inner.forEach((error) => {\r\n      // console.log('error.path', error.path)\r\n      // Checks whether it's an array or not.\r\n      // If a $ sign is in a path, it's an array\r\n      if (/\\$/.test(error.path)) {\r\n\r\n        // Checks if it's a top level of an array\r\n        // If a path ends with a $ sign, it's a top level of an array\r\n        if (/\\$$/.test(error.path)) {\r\n          set(resultErrors, error.path + '[_error]', error.message);\r\n          // If the path includes the $ sign and number wrapped with square brackets,\r\n          // it's a multilevel path\r\n        } else if (/\\$\\[\\d+\\]/.test(error.path)) { \r\n          set(resultErrors, error.path, error.message);\r\n        }\r\n\r\n      } else {\r\n        set(resultErrors, error.path, error.message);\r\n        // resultErrors[error.path] = error.message\r\n      }\r\n    })\r\n\r\n    // console.log('resultErrors', resultErrors)\r\n\r\n    return resultErrors\r\n  }\r\n}\r\n\r\nexport const required = (message = 'Required') => value =>\r\n  value ? undefined : message\r\n\r\n// eslint-disable-next-line no-template-curly-in-string\r\nexport const maxLength = (max, message = 'Must be ${max} characters or less') =>\r\n  (value) => {\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexMax = new RegExp('\\\\${max}', 'gi')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexValue = new RegExp('\\\\${value}', 'gi')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexLength = new RegExp('\\\\${length}', 'gi')\r\n\r\n    return value && value.length > max ? message\r\n      .replace(regexMax, max)\r\n      .replace(regexValue, value)\r\n      .replace(regexLength, value.length) : undefined\r\n  }\r\n\r\n// eslint-disable-next-line no-template-curly-in-string\r\nexport const minLength = (min, message = 'Must be ${min} characters or more') =>\r\n  (value = '') => {\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexMin = new RegExp('\\\\${min}', 'gi')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexValue = new RegExp('\\\\${value}', 'gi')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexLength = new RegExp('\\\\${length}', 'gi')\r\n\r\n    return value.length < min ? message\r\n      .replace(regexMin, min)\r\n      .replace(regexValue, value)\r\n      .replace(regexLength, value.length) : undefined\r\n  }\r\n\r\nexport const number = (message = 'Must be a number') => value => {\r\n  // eslint-disable-next-line no-template-curly-in-string\r\n  const regexValue = new RegExp('\\\\${value}', 'gi')\r\n  return value && isNaN(Number(value)) ? message.replace(regexValue, value) : undefined\r\n}\r\n\r\n\r\n// eslint-disable-next-line no-template-curly-in-string\r\nexport const minValue = (min, message = 'Must be at least ${min}') => value => {\r\n  // eslint-disable-next-line no-template-curly-in-string\r\n  const regexMin = new RegExp('\\\\${min}', 'gi')\r\n  // eslint-disable-next-line no-template-curly-in-string\r\n  const regexValue = new RegExp('\\\\${value}', 'gi')\r\n\r\n  return value && value < min ? message\r\n    .replace(regexMin, min)\r\n    .replace(regexValue, value) : undefined\r\n\r\n}\r\n\r\nexport const email = (message = 'Invalid email address') => value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? message\r\n    : undefined\r\n\r\nexport const tooYoung = (age = 0, message = 'You do not meet the minimum age requirement!') =>\r\n  value => {\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexAge = new RegExp('\\\\${age}', 'gi')\r\n    return value && value < age\r\n      ? message.replace(regexAge, age)\r\n      : undefined\r\n  }\r\n\r\nexport const aol = (message = 'Really? You still use AOL for your email?') => value =>\r\n  value && /.+@aol\\.com/.test(value)\r\n    ? message\r\n    : undefined\r\n\r\nexport const alphaNumeric = (message = 'Only alphanumeric characters') =>\r\n  value => value && /[^a-zA-Z0-9 ]/i.test(value)\r\n    ? message\r\n    : undefined\r\n\r\nexport const russianPhoneNumberPattern = (\r\n  pattern = '+7 (XXX) XXX-XX-XX',\r\n  // eslint-disable-next-line no-template-curly-in-string\r\n  message = 'Invalid phone number, a format of a phone number must be ${pattern} '\r\n) =>\r\n  (value) => {\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    const regexLength = new RegExp('\\\\${pattern}', 'gi')\r\n    return value && !/^(\\+7 \\([0-9]{3}\\)\\s[0-9]{3}-[0-9]{2}-[0-9]{2})$/i.test(value)\r\n      ? message.replace(regexLength, pattern)\r\n      : undefined\r\n  }\r\n\r\n\r\nconst checkUserName = (username, props) => {\r\n  if (['john', 'paul', 'george', 'ringo'].includes(username)) {\r\n    // eslint-disable-next-line no-throw-literal\r\n    throw { ...props.asyncErrors, username: 'That username is taken' }\r\n  }\r\n}\r\n\r\nconst checkUserEmail = (email, props) => {\r\n  if (['john@mail.com', 'paul@mail.com', 'george@mail.com', 'ringo@mail.com']\r\n    .includes(email)) {\r\n    // eslint-disable-next-line no-throw-literal\r\n    throw { ...props.asyncErrors, email: 'That email is already taken' }\r\n  }\r\n}\r\n\r\nconst checkUserAge = (age, props) => {\r\n  if (age < 16) {\r\n    // eslint-disable-next-line no-throw-literal\r\n    throw { ...props.asyncErrors, age: 'You are too young :(' }\r\n  }\r\n}\r\n\r\n\r\nexport const asyncValidate = (values, dispatch, props, blurredField) => {\r\n  console.log(props)\r\n  return sleep(1000).then(() => {\r\n    if (blurredField === 'username') {\r\n      checkUserName(values.username, props)\r\n    }\r\n\r\n    if (blurredField === 'email') {\r\n      checkUserEmail(values.email, props)\r\n    }\r\n\r\n    if (blurredField === 'age') {\r\n      checkUserAge(values.age, props)\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const checkUserName = async ({username}, dispatch, props, field) => {\r\n//   console.log(props)\r\n//   await sleep(1000)\r\n//   if (['john', 'paul', 'george', 'ringo'].includes(username)) {\r\n//     // eslint-disable-next-line no-throw-literal\r\n//     return Promise.reject( {...props.asyncErrors, username: 'That username is taken' })\r\n//   }\r\n\r\n//   return Promise.resolve()\r\n// }\r\n\r\n// const checkUserEmail = async ({email}, dispatch, props, field) => {\r\n//   await sleep(1000)\r\n//   if (['john@mail.com', 'paul@mail.com', 'george@mail.com', 'ringo@mail.com']\r\n//     .includes(email)) {\r\n//     // eslint-disable-next-line no-throw-literal\r\n//     return Promise.reject(  {...props.asyncErrors, email: 'That email is already taken' })\r\n//   }\r\n\r\n//   return Promise.resolve()\r\n// }\r\n// const checkUserAge = async ({age}, dispatch, props, field) => {\r\n//   await sleep(1000)\r\n//   if (age < 16) {\r\n//     // eslint-disable-next-line no-throw-literal\r\n//     return Promise.reject(  {...props.asyncErrors, age: 'You are too young :(' })\r\n//   }\r\n\r\n//   return Promise.resolve()\r\n// }\r\n\r\n// const composeAsyncValidators = (validatorFns) => {\r\n//   return async (values, dispatch, props, field) => {\r\n//     const validatorFn = validatorFns[field]\r\n//     await validatorFn(values, dispatch, props, field);\r\n//   };\r\n// }\r\n\r\n// export const asyncValidate = composeAsyncValidators({  \r\n//   username: checkUserName,\r\n//   email: checkUserEmail,\r\n//   age: checkUserAge\r\n// })\r\n\r\n","export const userAccount = {\r\n    // uses to populate \"account\" reducer when \"Load\" is clicked\r\n    firstName: 'Jane',\r\n    lastName: 'Doe',\r\n    age: '42',\r\n    anniversaryDate: '2018-08-22',\r\n    sex: 'female',\r\n    employed: true,\r\n    favoriteColor: 'Blue',\r\n    bio: 'Born to write amazing Redux code.'\r\n}\r\n\r\nexport const userClubInfo = {\r\n    clubName: 'Some club in the hood',\r\n    members$: [\r\n        {\r\n            firstName: 'Jane',\r\n            lastName: 'Doe',\r\n            hobbies$: [\r\n                'reading',\r\n                'swimming'\r\n            ]\r\n        },\r\n        {\r\n            firstName: 'Sam',\r\n            lastName: ' Peterson',\r\n            hobbies$: [\r\n                'sport',\r\n                'running',\r\n                'writing'\r\n            ]\r\n        }\r\n    ]\r\n}","import { logger } from '../../utils'\r\n\r\nconst Page  = ({children}) => {\r\n  const submit = values => {\r\n    logger(values)\r\n  }\r\n    return children(submit)\r\n}\r\n\r\nexport default Page","import React, { useEffect } from 'react'\r\n\r\nexport const RenderField = ({\r\n  children,\r\n  input,\r\n  label,\r\n  meta: { asyncValidating, touched, error, warning },\r\n  noValidate,\r\n  onDestoy,\r\n  type,\r\n  blockInput\r\n}) => {\r\n  const isCheckRadio = /radio|checkbox/.test(type)\r\n  const isSelect = type === 'select'\r\n  const isInput = /file|password|^text$|email|number|radio|checkbox/.test(type)\r\n  const isRadio = type === 'radio'\r\n  const isTextArea = type === 'textarea'\r\n  const invalid = !noValidate && touched && error\r\n  const isWarning = !noValidate && touched && warning && !invalid\r\n  const valid = !noValidate && touched && !invalid\r\n  const id = Math.random(32).toString().slice(2)\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      onDestoy && onDestoy()\r\n    }\r\n  }, [onDestoy])\r\n\r\n  return (\r\n    <div className={\r\n      (asyncValidating ? ' async-validating ' : '') +\r\n      ' form-group ' +\r\n      (isCheckRadio ? ' form-check ' : '')\r\n    }>\r\n      {!isCheckRadio && <label htmlFor={id}>{label}</label>}\r\n      <div style={{ position: 'relative' }}>\r\n        {blockInput && <div style={{\r\n          position: 'absolute',\r\n          left: 0,\r\n          right: 0,\r\n          top: 0,\r\n          bottom: 0,\r\n          zIndex: 9999,\r\n        }}></div>}\r\n        {isInput && <input\r\n          id={id}\r\n          className={\r\n            (!isRadio && invalid ? ' is-invalid ' : ' ') +\r\n            (!isRadio && valid ? ' is-valid ' : ' ') +\r\n            (!isCheckRadio ? ' form-control ' : ' form-check-input ') + \r\n            ' bg-transparent '\r\n          }\r\n          {...input}\r\n          placeholder={label}\r\n          type={type} />}\r\n\r\n        {isSelect && <select\r\n          id={id}\r\n          className={\r\n            (invalid ? ' is-invalid ' : ' ') +\r\n            (valid ? ' is-valid ' : ' ') +\r\n            ' form-control '}\r\n          {...input}\r\n        >\r\n          {children}\r\n        </select>}\r\n\r\n        {isTextArea && <textarea\r\n          id={label}\r\n          className={\r\n            (invalid ? ' is-invalid ' : ' ') +\r\n            (valid ? ' is-valid ' : ' ') +\r\n            ' form-control '}\r\n          {...input}\r\n        ></textarea>}\r\n\r\n        {isCheckRadio && <label\r\n          className=\"form-check-label\"\r\n          htmlFor={id}>{label}</label>\r\n        }\r\n\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n\r\n        {!isRadio && invalid && <div className=\"invalid-feedback\">{error}</div>}\r\n        {!isRadio && isWarning && <small>{warning}</small>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderField","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { /*asyncValidator,*/ syncValidator } from '../../utils'\r\nimport {  RenderField } from '../shared'\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less'),\r\n  email: yup\r\n    .string()\r\n    .required('Required')\r\n    .email('Invalid email address'),\r\n  age: yup\r\n    .number()\r\n    .typeError('Only number is acceptable')\r\n    .required('Required')\r\n    .positive('Only positive number is acceptable')\r\n    .integer('Only integer number is acceptable')\r\n    .min(18, 'Sorry, you must be at least 18 years old')\r\n});\r\n\r\nconst warningSchema = yup.object().shape({\r\n  age: yup\r\n    .number()\r\n    .min(19, 'Hmm, you seem a bit young...')\r\n})\r\n\r\n\r\n\r\nconst SyncValidationFormYup = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={RenderField}\r\n          label=\"Email\" />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Age\" />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'syncValidationYup',\r\n  validate: syncValidator(validationSchema),\r\n  warn: syncValidator(warningSchema)\r\n  // asyncValidate: asyncValidator(schema)\r\n})(SyncValidationFormYup)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst SimpleForm = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return <form\r\n    className=\"mt-3\"\r\n    noValidate\r\n    onSubmit={handleSubmit}>\r\n\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"firstName\">First Name</label>\r\n      <Field\r\n        id=\"firstName\"\r\n        placeholder=\"First Name\"\r\n        className=\"form-control\"\r\n        name=\"firstName\"\r\n        component=\"input\"\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"lastName\">Last Name</label>\r\n      <Field\r\n        id=\"lastName\"\r\n        placeholder=\"Last Name\"\r\n        className=\"form-control\"\r\n        name=\"lastName\"\r\n        component=\"input\"\r\n        type=\"text\" />\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"email\">Email</label>\r\n      <Field\r\n        id=\"email\"\r\n        placeholder=\"Email\"\r\n        className=\"form-control\"\r\n        name=\"email\"\r\n        component=\"input\"\r\n        type=\"email\" />\r\n    </div>\r\n\r\n    <div >\r\n      <label>Sex</label>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"male\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"male\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"male\">Male</label>\r\n      </div>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"female\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"female\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"female\">Female</label>\r\n      </div>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"other\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"other\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"other\">Other</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"favoriteColor\">Favorite Color</label>\r\n      <div>\r\n        <Field\r\n          className=\"form-control\"\r\n          id=\"favoriteColor\"\r\n          name=\"favoriteColor\"\r\n          component=\"select\">\r\n          <option />\r\n          <option value=\"ff0000\">Red</option>\r\n          <option value=\"00ff00\">Green</option>\r\n          <option value=\"0000ff\">Blue</option>\r\n        </Field>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"form-group form-check\">\r\n      <Field\r\n        id=\"employed\"\r\n        className=\"form-check-input\"\r\n        name=\"employed\"\r\n        component=\"input\"\r\n        type=\"checkbox\" />\r\n      <label\r\n        className=\"form-check-label\"\r\n        htmlFor=\"employed\">Employed</label>\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"notes\">Notes</label>\r\n      <div>\r\n        <Field\r\n          className=\"form-control\"\r\n          id=\"notes\"\r\n          name=\"notes\"\r\n          component=\"textarea\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"mt-3\">\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pristine || submitting}\r\n        className=\"btn btn-secondary\">Submit</button>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pristine || submitting} onClick={reset}\r\n        className=\"btn btn-light ml-3\">Clear</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default reduxForm({ form: 'simple' })(SimpleForm)\r\n\r\nexport const listing = `\r\nimport React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst SimpleForm = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return <form\r\n    className=\"mt-3\"\r\n    noValidate\r\n    onSubmit={handleSubmit}>\r\n\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"firstName\">First Name</label>\r\n      <Field\r\n        id=\"firstName\"\r\n        placeholder=\"First Name\"\r\n        className=\"form-control\"\r\n        name=\"firstName\"\r\n        component=\"input\"\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"lastName\">Last Name</label>\r\n      <Field\r\n        id=\"lastName\"\r\n        placeholder=\"Last Name\"\r\n        className=\"form-control\"\r\n        name=\"lastName\"\r\n        component=\"input\"\r\n        type=\"text\" />\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"email\">Email</label>\r\n      <Field\r\n        id=\"email\"\r\n        placeholder=\"Email\"\r\n        className=\"form-control\"\r\n        name=\"email\"\r\n        component=\"input\"\r\n        type=\"email\" />\r\n    </div>\r\n\r\n    <div >\r\n      <label>Sex</label>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"male\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"male\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"male\">Male</label>\r\n      </div>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"female\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"female\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"female\">Female</label>\r\n      </div>\r\n      <div className=\"form-group form-check\">\r\n        <Field\r\n          id=\"other\"\r\n          className=\"form-check-input\"\r\n          name=\"sex\"\r\n          component=\"input\"\r\n          type=\"radio\"\r\n          value=\"other\" />\r\n        <label\r\n          className=\"form-check-label\"\r\n          htmlFor=\"other\">Other</label>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"form-group mt-3\">\r\n      <label htmlFor=\"favoriteColor\">Favorite Color</label>\r\n      <div>\r\n        <Field\r\n          className=\"form-control\"\r\n          id=\"favoriteColor\"\r\n          name=\"favoriteColor\"\r\n          component=\"select\">\r\n          <option />\r\n          <option value=\"ff0000\">Red</option>\r\n          <option value=\"00ff00\">Green</option>\r\n          <option value=\"0000ff\">Blue</option>\r\n        </Field>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"form-group form-check\">\r\n      <Field\r\n        id=\"employed\"\r\n        className=\"form-check-input\"\r\n        name=\"employed\"\r\n        component=\"input\"\r\n        type=\"checkbox\" />\r\n      <label\r\n        className=\"form-check-label\"\r\n        htmlFor=\"employed\">Employed</label>\r\n    </div>\r\n\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"notes\">Notes</label>\r\n      <div>\r\n        <Field\r\n          className=\"form-control\"\r\n          id=\"notes\"\r\n          name=\"notes\"\r\n          component=\"textarea\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"mt-3\">\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pristine || submitting}\r\n        className=\"btn btn-secondary\">Submit</button>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        disabled={pristine || submitting} onClick={reset}\r\n        className=\"btn btn-light ml-3\">Clear</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nexport default reduxForm({ form: 'simple' })(SimpleForm)\r\n\r\n`","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {  RenderField } from '../shared'\r\n\r\nconst validate = values => {\r\n  const errors = {}\r\n  if (!values.username) {\r\n    errors.username = 'Required'\r\n  } else if (values.username.length > 15) {\r\n    errors.username = 'Must be 15 characters or less'\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Required'\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = 'Invalid email address'\r\n  }\r\n  if (!values.age) {\r\n    errors.age = 'Required'\r\n  } else if (isNaN(Number(values.age))) {\r\n    errors.age = 'Must be a number'\r\n  } else if (Number(values.age) < 18) {\r\n    errors.age = 'Sorry, you must be at least 18 years old'\r\n  }\r\n  return errors\r\n}\r\n\r\nconst warn = values => {\r\n  const warnings = {}\r\n  if (values.age < 19) {\r\n    warnings.age = 'Hmm, you seem a bit young...'\r\n  }\r\n  return warnings\r\n}\r\n\r\nconst SyncValidationForm = ({handleSubmit, pristine, reset, submitting}) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n        />\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <Field name=\"email\" type=\"email\" component={RenderField} label=\"Email\" />\r\n      </div>\r\n      <div className=\"mt-3\">\r\n        <Field name=\"age\" type=\"number\" component={RenderField} label=\"Age\" />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'syncValidation',\r\n  validate,\r\n  warn\r\n})(SyncValidationForm)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { RenderField } from '../shared'\r\nimport {\r\n  alphaNumeric,\r\n  aol,\r\n  email,\r\n  maxLength,\r\n  minLength,\r\n  russianPhoneNumberPattern,\r\n  minValue,\r\n  number,\r\n  required,\r\n  tooYoung\r\n} from '../../utils'\r\n\r\n// eslint-disable-next-line no-template-curly-in-string\r\nconst maxLength15 = maxLength(15, 'Must be ${max} characters or less, current length is ${length} and the current value is \\' ${value}\\'')\r\n// eslint-disable-next-line no-template-curly-in-string\r\nconst minLength2 = minLength(2, 'Must be ${min} characters or more, current length is ${length} and the current value is \\' ${value}\\'')\r\nconst userNameRequired = required('Username is required')\r\nconst userNameAlphaNumeric = alphaNumeric('Only alphanumeric characters in username are allowed')\r\nconst phoneNumberRequired = required('Phone number is required')\r\nconst userRussianPhoneNumberPattern = russianPhoneNumberPattern()\r\nconst userEmail = email()\r\nconst userDeprecetedMail = aol()\r\nconst userEmailRequired = required('Email is required')\r\nconst minValue13 = minValue(13)\r\n// eslint-disable-next-line no-template-curly-in-string\r\nconst userTooYoung = tooYoung(16, 'You have met the minimum age requirement! But it\\'s better to be ${age}')\r\nconst userAgeRequired = required('Age is required')\r\nconst ageNumber = number()\r\n\r\n\r\nconst FieldLevelValidation = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n          validate={[userNameRequired, maxLength15, minLength2]}\r\n          warn={userNameAlphaNumeric}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={RenderField}\r\n          label=\"Email\"\r\n          validate={[userEmailRequired, userEmail]}\r\n          warn={userDeprecetedMail} />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Age\"\r\n          validate={[userAgeRequired, ageNumber, minValue13]}\r\n          warn={userTooYoung} />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"phone\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Phone number\"\r\n          validate={[phoneNumberRequired, userRussianPhoneNumberPattern]} />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'fieldLevelValidation',\r\n})(FieldLevelValidation)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { syncValidator } from '../../utils'\r\nimport { RenderField } from '../shared'\r\nimport {\r\n  alphaNumeric,\r\n  aol,\r\n  // email,\r\n  // maxLength,\r\n  minLength,\r\n  russianPhoneNumberPattern,\r\n  minValue,\r\n  // number,\r\n  required,\r\n  tooYoung\r\n} from '../../utils'\r\n\r\n// eslint-disable-next-line no-template-curly-in-string\r\n// const maxLength15 = maxLength(15, 'Must be ${max} characters or less, current length is ${length} and the current value is \\' ${value}\\'')\r\n// eslint-disable-next-line no-template-curly-in-string\r\nconst minLength2 = minLength(2, 'Must be ${min} characters or more, current length is ${length} and the current value is \\' ${value}\\'')\r\n// const userNameRequired = required('Username is required')\r\nconst userNameAlphaNumeric = alphaNumeric('Only alphanumeric characters in username are allowed')\r\nconst phoneNumberRequired = required('Phone number is required')\r\nconst userRussianPhoneNumberPattern = russianPhoneNumberPattern()\r\n// const userEmail = email()\r\nconst userDeprecetedMail = aol()\r\nconst userEmailRequired = required('Email is required')\r\nconst minValue13 = minValue(13)\r\n// eslint-disable-next-line no-template-curly-in-string\r\nconst userTooYoung = tooYoung(16, 'You have met the minimum age requirement! But it\\'s better to be ${age}')\r\nconst userAgeRequired = required('Age is required')\r\n// const ageNumber = number()\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Username is required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less'),\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email address'),\r\n  age: yup\r\n    .number()\r\n    // .required('Required')\r\n    .typeError('Only number is acceptable')\r\n    .positive('Only positive number is acceptable')\r\n    .integer('Only integer number is acceptable')\r\n    // .min(18, 'Sorry, you must be at least 18 years old')\r\n});\r\n\r\n\r\nconst MixedSyncValidation = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n          validate={[ minLength2]}\r\n          warn={userNameAlphaNumeric}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={RenderField}\r\n          label=\"Email\"\r\n          validate={[userEmailRequired]}\r\n          warn={userDeprecetedMail} />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Age\"\r\n          validate={[userAgeRequired, minValue13]}\r\n          warn={userTooYoung} />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"phone\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Phone number\"\r\n          validate={[phoneNumberRequired, userRussianPhoneNumberPattern]} />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'mixedSyncValidation',\r\n  validate: syncValidator(validationSchema)\r\n})(MixedSyncValidation)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { RenderField } from '../shared'\r\nimport { syncValidator, asyncValidate } from '../../utils'\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .min(2, 'Must be ${min} characters or more'),\r\n  email: yup\r\n    .string()\r\n    .required('Required')\r\n    .email('Invalid email address'),\r\n  age: yup\r\n    .number()\r\n    .typeError('Only number is acceptable')\r\n    .required('Required')\r\n    .positive('Only positive number is acceptable')\r\n    .integer('Only integer number is acceptable')\r\n});\r\n\r\nconst AsyncBlurValidation = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={RenderField}\r\n          label=\"Email\" />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Age\" />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'asyncBlurValidation',\r\n  validate: syncValidator(validationSchema),\r\n  asyncValidate: asyncValidate,\r\n  asyncBlurFields: ['username', 'email', 'age'],\r\n  persistentSubmitErrors: true\r\n})(AsyncBlurValidation)","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { RenderField } from '../shared'\r\nimport { syncValidator, asyncValidate } from '../../utils'\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .min(2, 'Must be ${min} characters or more'),\r\n  email: yup\r\n    .string()\r\n    .required('Required')\r\n    .email('Invalid email address'),\r\n  age: yup\r\n    .number()\r\n    .typeError('Only number is acceptable')\r\n    .required('Required')\r\n    .positive('Only positive number is acceptable')\r\n    .integer('Only integer number is acceptable')\r\n});\r\n\r\nconst AsyncChangeValidation = ({ handleSubmit, pristine, reset, submitting }) => {\r\n  return (\r\n    <form\r\n      noValidate\r\n      onSubmit={handleSubmit}>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"username\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Username\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"email\"\r\n          type=\"email\"\r\n          component={RenderField}\r\n          label=\"Email\" />\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <Field\r\n          name=\"age\"\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label=\"Age\" />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'asyncChangeValidation',\r\n  validate: syncValidator(validationSchema),\r\n  asyncValidate: asyncValidate,\r\n  asyncChangeFields: ['username', 'email', 'age'],\r\n  persistentSubmitErrors: true\r\n})(AsyncChangeValidation)","import React from 'react'\r\nimport  './ErrorMessage.css'\r\n\r\n\r\nconst ErrorMessage = ({ meta }) =>\r\n  <div className=\"error-message\">{meta.error && meta.touched && 'Please select an option first'}</div>\r\n\r\nexport default ErrorMessage ","import { createSelector } from 'reselect'\r\n\r\nexport const userState = state => state.user\r\n\r\nexport const getUserAccount = createSelector(\r\n  userState,\r\n  userState => userState.account\r\n)\r\n\r\nexport const getUserColors = createSelector(\r\n  userState,\r\n  userState => userState.colors\r\n)\r\n\r\nexport const getUserClubInfo = createSelector(\r\n  userState,\r\n  userState => userState.clubInfo\r\n)\r\n\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { connect } from 'react-redux'\r\nimport { RenderField } from '../shared'\r\nimport { syncValidator } from '../../utils';\r\nimport ErrorMessage from '../shared/ErrorMessage/ErrorMessage';\r\nimport { getUserColors, getUserAccount } from '../../store/selectors/user';\r\nimport { userDataSuccess } from '../../store/actions';\r\nimport { userAccount as mockUserAccount } from '../../utils'\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required('Required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less'),\r\n  lastName: yup\r\n    .string()\r\n    .required('Required'),\r\n  age: yup\r\n    .number()\r\n    .typeError('Only number is acceptable')\r\n    .required('Required')\r\n    .positive('Only positive number is acceptable')\r\n    .integer('Only integer number is acceptable')\r\n    .min(18, 'Sorry, you must be at least 18 years old'),\r\n  sex: yup\r\n    .string()\r\n    .required('Required'),\r\n  favoriteColor: yup\r\n    .string()\r\n    .required('Required'),\r\n  agreement: yup\r\n    .boolean()\r\n    .test(\r\n      'is-agreement',\r\n      'Required',\r\n      value => !!value\r\n    )\r\n});\r\n\r\nlet InitializeFromState = ({\r\n  colors,\r\n  handleSubmit,\r\n  load,\r\n  pristine,\r\n  reset,\r\n  submitting,\r\n  userAccount\r\n}) => {\r\n  const isAccount = !!Object.keys(userAccount).length\r\n  return (\r\n    <>\r\n      <div>\r\n        <button className=\"btn btn-secondary\" type=\"button\" onClick={() => load(mockUserAccount)}>\r\n          Load Account\r\n        </button>\r\n      </div>\r\n      <form\r\n        noValidate\r\n        onSubmit={handleSubmit}>\r\n\r\n        <fieldset disabled={!isAccount || submitting}>\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"First Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"Last Name\" />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"age\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"Age\" />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <label>Sex</label>\r\n            <Field\r\n              name=\"sex\"\r\n              type=\"radio\"\r\n              value=\"male\"\r\n              component={RenderField}\r\n              label=\"Male\" />\r\n            <Field\r\n              name=\"sex\"\r\n              type=\"radio\"\r\n              value=\"female\"\r\n              component={RenderField}\r\n              label=\"Female\" />\r\n            <Field\r\n              name=\"sex\"\r\n              type=\"radio\"\r\n              value=\"other\"\r\n              component={RenderField}\r\n              label=\"Other\" />\r\n\r\n            <Field name=\"sex\" component={ErrorMessage} />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              label=\"Favorite Color\"\r\n              name=\"favoriteColor\"\r\n              type=\"select\"\r\n              component={RenderField}>\r\n              <option />\r\n              {colors && colors.map((color, i) => (\r\n                <option key={color + i} value={color}>{color}</option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              noValidate\r\n              name=\"employed\"\r\n              type=\"checkbox\"\r\n              component={RenderField}\r\n              label=\"Employed\" />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              noValidate\r\n              name=\"bio\"\r\n              type=\"textarea\"\r\n              component={RenderField}\r\n              label=\"Bio\" />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"agreement\"\r\n              type=\"checkbox\"\r\n              component={RenderField}\r\n              label=\"Agreement with something terrible\" />\r\n          </div>\r\n\r\n          <div>\r\n            <button type=\"submit\" className=\"btn btn-secondary\" disabled={submitting}>\r\n              Submit\r\n        </button>\r\n            <button type=\"button\" className=\"btn btn-light ml-3\" disabled={pristine || submitting} onClick={reset}>\r\n              Clear Values\r\n        </button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  colors: getUserColors(state),\r\n  userAccount: getUserAccount(state),\r\n  initialValues: getUserAccount(state),\r\n})\r\n\r\nInitializeFromState = reduxForm({\r\n  form: 'initializeFromState',\r\n  validate: syncValidator(validationSchema),\r\n  enableReinitialize: true\r\n})(InitializeFromState)\r\n\r\nInitializeFromState = connect(\r\n  mapStateToProps,\r\n  { load: userDataSuccess }\r\n)(InitializeFromState)\r\n\r\nexport default InitializeFromState\r\n","import React, { useCallback } from 'react'\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { connect } from 'react-redux'\r\nimport { RenderField } from '../shared'\r\nimport { syncValidator } from '../../utils'\r\nimport { getUserColors } from '../../store/selectors/user'\r\n\r\nconst validationSchema = yup.object().shape({\r\n  nickname: yup\r\n    .string()\r\n    .when('$nicknameRequired', (nicknameRequired, schema) =>\r\n      (nicknameRequired ? schema.required('Required') : schema.required('Required'))),\r\n  firstName: yup\r\n    .string()\r\n    .required('Required')\r\n    // eslint-disable-next-line no-template-curly-in-string\r\n    .max(15, 'Must be ${max} characters or less'),\r\n  lastName: yup\r\n    .string()\r\n    .required('Required'),\r\n  hasEmail: yup\r\n    .boolean(),\r\n  email: yup\r\n    .string()\r\n    .email('Invalid email')\r\n    .when('hasEmail', {\r\n      is: true,\r\n      then: yup.string().required('Required'),\r\n      otherwise: yup.string()\r\n    }),\r\n  favoriteColor: yup\r\n    .string()\r\n    .required('Required'),\r\n  agreement: yup\r\n    .boolean()\r\n    .test(\r\n      'is-agreement',\r\n      'Required',\r\n      value => !!value\r\n    )\r\n});\r\n\r\nlet SelectingFormValues = ({\r\n  colors,\r\n  handleSubmit,\r\n  hasEmailValue,\r\n  favoriteColorValue,\r\n  context: { nicknameRequired },\r\n  pristine,\r\n  reset,\r\n  submitting,\r\n  resetSection\r\n}) => {\r\n  const memorizedDestroyEmail = useCallback(() => { resetSection('email') }, [resetSection])\r\n  return (\r\n    <>\r\n      <form\r\n        noValidate\r\n        onSubmit={handleSubmit}>\r\n\r\n        <fieldset disabled={submitting}>\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              noValidate={!nicknameRequired}\r\n              name=\"nickname\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"Nickname\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"First Name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              component={RenderField}\r\n              label=\"Last Name\" />\r\n          </div>\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              noValidate\r\n              name=\"hasEmail\"\r\n              type=\"checkbox\"\r\n              component={RenderField}\r\n              label=\"Has email?\" />\r\n          </div>\r\n\r\n          {hasEmailValue && <div className=\"mt-3\">\r\n            <Field\r\n              onDestoy={memorizedDestroyEmail}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              component={RenderField}\r\n              label=\"Email\" />\r\n          </div>}\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              label=\"Favorite Color\"\r\n              name=\"favoriteColor\"\r\n              type=\"select\"\r\n              component={RenderField}>\r\n              <option />\r\n              {colors && colors.map((color, i) => (\r\n                <option key={color + i} value={color}>{color}</option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n\r\n          {favoriteColorValue && (\r\n            <div\r\n              style={{\r\n                height: 80,\r\n                width: 200,\r\n                margin: '10px auto',\r\n                backgroundColor: favoriteColorValue\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <div className=\"mt-3\">\r\n            <Field\r\n              name=\"agreement\"\r\n              type=\"checkbox\"\r\n              component={RenderField}\r\n              label=\"Agreement with something terrible\" />\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-secondary\"\r\n              disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-light ml-3\"\r\n              disabled={pristine || submitting}\r\n              onClick={reset}>\r\n              Clear Values\r\n            </button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst selector = formValueSelector('selectingFormValues')\r\n\r\nconst mapStateToProps = state => ({\r\n  colors: getUserColors(state),\r\n  hasEmailValue: selector(state, 'hasEmail'),\r\n  favoriteColorValue: selector(state, 'favoriteColor')\r\n})\r\n\r\nSelectingFormValues = reduxForm({\r\n  form: 'selectingFormValues',\r\n  validate: syncValidator(validationSchema),\r\n  touchOnChange: true\r\n})(SelectingFormValues)\r\n\r\n\r\nSelectingFormValues = connect(\r\n  mapStateToProps,\r\n)(SelectingFormValues)\r\n\r\nexport default SelectingFormValues\r\n","export default {\r\n  MEMBER: 'member',\r\n}","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { RenderField } from '../../shared'\r\n\r\n\r\nconst RenderHobbies = ({ blockInput, fields, maxHobbiesLength, meta: { error, warning } }) => {\r\n  return (<ul className=\"list-group\">\r\n    <li className=\"list-group-item bg-transparent\">\r\n      <button\r\n        disabled={fields.length >= maxHobbiesLength}\r\n        className=\"btn btn-secondary\"\r\n        type=\"button\"\r\n        onClick={() => fields.push()}\r\n      >\r\n        Add Hobby\r\n      </button>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {warning && <div className=\"warning-message\">{warning}</div>}\r\n    </li>\r\n\r\n    {fields.map((hobby, index) => (\r\n      <li className=\"list-group-item\" key={index}>\r\n        <button\r\n          className=\"close\"\r\n          type=\"button\"\r\n          title=\"Remove Hobby\"\r\n          onClick={() => fields.remove(index)}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <Field\r\n          blockInput={blockInput}\r\n          name={hobby}\r\n          type=\"text\"\r\n          component={RenderField}\r\n          label={`Hobby #${index + 1}`}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>)\r\n}\r\n\r\nexport default RenderHobbies","import React, { useCallback, useState } from 'react'\r\nimport { Field, reduxForm, FieldArray, formValueSelector } from 'redux-form'\r\nimport * as yup from 'yup';\r\nimport { connect } from 'react-redux'\r\nimport { syncValidator } from '../../utils'\r\nimport { RenderField } from '../shared'\r\nimport { userClubInfo as mockUserClubInfo } from '../../utils'\r\nimport { getUserClubInfo } from '../../store/selectors/user';\r\nimport { userClubInfoSuccess } from '../../store/actions';\r\nimport M from '../FieldArraysForm/Member/Member'\r\n\r\nlet Member = M\r\n\r\nconst selector = formValueSelector('fieldArraysForm')\r\n\r\nconst validationSchema = yup\r\n  .object()\r\n  .shape({\r\n    clubName: yup\r\n      .string()\r\n      .required('Club name is required')\r\n      // eslint-disable-next-line no-template-curly-in-string\r\n      .max(25, 'Must be ${max} characters or less')\r\n      // eslint-disable-next-line no-template-curly-in-string\r\n      .min(2, 'Must be ${min} characters or more'),\r\n    members$: yup\r\n      .array()\r\n      .of(yup\r\n        .object()\r\n        .shape({\r\n          firstName: yup\r\n            .string()\r\n            .required('First name is required'),\r\n          lastName: yup\r\n            .string()\r\n            .required('Last name is required'),\r\n          hobbies$: yup\r\n            .array()\r\n            .of(yup\r\n              .string()\r\n              .required('Hobbie is required')\r\n            )\r\n          // .max(4, 'No more than five hobbies allowed')\r\n        })\r\n      )\r\n      // .max(2, 'Max 3 mebmers allowed')\r\n      .required('At least one member must be entered')\r\n  });\r\n\r\nconst warn = (values) => {\r\n  // console.log('values', values)\r\n  const warnings = {}\r\n\r\n  if (!warnings.members$) {\r\n    warnings.members$ = []\r\n  }\r\n\r\n  if (values.members$) {\r\n    const membersArrayWarnings = []\r\n    values.members$.forEach((member, memberIndex) => {\r\n      const memberWarnings = {}\r\n\r\n\r\n      if (member && member.hobbies$ && member.hobbies$.length) {\r\n        if (member.hobbies$.length >= 5) {\r\n          if (!memberWarnings.hobbies$) {\r\n            memberWarnings.hobbies$ = []\r\n          }\r\n          memberWarnings.hobbies$._warning = 'No more than five hobbies allowed'\r\n          membersArrayWarnings[memberIndex] = memberWarnings\r\n        }\r\n      }\r\n\r\n    })\r\n    if (membersArrayWarnings.length) {\r\n      warnings.members$ = [...warnings.members$, ...membersArrayWarnings]\r\n    }\r\n  }\r\n\r\n  if (values.members$ && values.members$.length >= 3) {\r\n    warnings.members$._warning = 'Max 3 mebmers allowed'\r\n  }\r\n\r\n  return warnings\r\n}\r\n\r\nMember = connect(\r\n  (state, props) => ({\r\n    firstName: selector(state, `${props.member}.firstName`),\r\n    lastName: selector(state, `${props.member}.lastName`),\r\n    hobbies: selector(state, `${props.member}.hobbies$`)\r\n  })\r\n)(Member)\r\n\r\nconst RenderMembers = ({\r\n  fields,\r\n  maxHobbiesLength,\r\n  meta: { error, warning, submitFailed }\r\n}) => {\r\n  const allFields = fields.getAll()\r\n  const [isDragging, setIsDragging] = useState(false)\r\n  const [hoverIndex, setHoverIndex] = useState(0)\r\n  const moveCard = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      setHoverIndex(hoverIndex)\r\n      fields.swap(dragIndex, hoverIndex)\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [allFields, fields],\r\n  )\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <li className=\"list-group-item\">\r\n\r\n        <button\r\n          disabled={fields.length >= 3}\r\n          className=\"btn btn-secondary\"\r\n          type=\"button\"\r\n          onClick={() => fields.push({})}\r\n        >\r\n          Add Member\r\n        </button>\r\n\r\n        {submitFailed && error && <div className=\"error-message\">{error}</div>}\r\n        {warning && <div className=\"warning-message\">{warning}</div>}\r\n      </li>\r\n\r\n      <div>\r\n        {fields.map((member, index) =>\r\n          <Member\r\n            highLight={isDragging && index === hoverIndex}\r\n            blockInput={isDragging}\r\n            beginDrag={() => setIsDragging(true)}\r\n            endDrag={() => setIsDragging(false)}\r\n            moveCard={moveCard}\r\n            maxHobbiesLength={maxHobbiesLength}\r\n            member={member}\r\n            fields={fields}\r\n            index={index}\r\n            key={index}\r\n          />)}\r\n      </div>\r\n    </ul>\r\n  )\r\n}\r\n\r\nlet FieldArraysForm = ({\r\n  handleSubmit,\r\n  maxHobbiesLength,\r\n  pristine,\r\n  reset,\r\n  submitting,\r\n  load\r\n}) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          type=\"button\"\r\n          onClick={() => load(mockUserClubInfo)}>\r\n          Load club info\r\n        </button>\r\n      </div>\r\n      <form\r\n        className=\"mt-3\"\r\n        noValidate\r\n        onSubmit={handleSubmit}>\r\n\r\n        <div className=\"mt-3\">\r\n          <Field\r\n            name=\"clubName\"\r\n            type=\"text\"\r\n            component={RenderField}\r\n            label=\"Club Name\"\r\n          />\r\n        </div>\r\n\r\n        <FieldArray\r\n          maxHobbiesLength={maxHobbiesLength}\r\n          name=\"members$\"\r\n          component={RenderMembers} />\r\n\r\n        <div className=\"mt-3\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={submitting}\r\n            className=\"btn btn-secondary\">Submit</button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={pristine || submitting} onClick={reset}\r\n            className=\"btn btn-light ml-3\">Clear</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  initialValues: getUserClubInfo(state),\r\n})\r\n\r\nFieldArraysForm = reduxForm({\r\n  form: 'fieldArraysForm',\r\n  warn,\r\n  validate: syncValidator(validationSchema),\r\n})(FieldArraysForm)\r\n\r\nFieldArraysForm = connect(\r\n  mapStateToProps,\r\n  { load: userClubInfoSuccess }\r\n)(FieldArraysForm)\r\n\r\nexport default FieldArraysForm","import React, { useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport MemberTypes from './MemberTypes'\r\nimport { Field, FieldArray } from 'redux-form'\r\nimport { RenderField } from '../../shared'\r\nimport RenderHobbies from '../RenderHobbies/RenderHobbies'\r\nimport './Member.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowUp, faArrowDown, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n  isMobile\r\n} from \"react-device-detect\";\r\n\r\nconst Member = ({\r\n  member,\r\n  index,\r\n  fields,\r\n  firstName,\r\n  lastName,\r\n  maxHobbiesLength,\r\n  hobbies,\r\n  moveCard,\r\n  endDrag,\r\n  beginDrag,\r\n  blockInput,\r\n  highLight\r\n}) => {\r\n  const fieldsLength = fields.length\r\n  const ref = useRef(null)\r\n  const [, drop] = useDrop({\r\n    accept: MemberTypes.MEMBER,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset()\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n      // Time to actually perform the action\r\n      moveCard(dragIndex, hoverIndex)\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n  const [collectedProps, drag] = useDrag({\r\n    item: { type: MemberTypes.MEMBER, index },\r\n    collect: monitor => {\r\n      return {\r\n        isDragging: monitor.isDragging(),\r\n      }\r\n    },\r\n    end: () => endDrag(false),\r\n    begin: () => beginDrag(true)\r\n  })\r\n  const { isDragging } = collectedProps\r\n  const opacity = isDragging ? 1 : 1\r\n  fieldsLength > 1 && drag(drop(ref))\r\n\r\n  return (\r\n    <div ref={ref} style={{ opacity }}>\r\n      <li\r\n        className={(highLight ? 'member_highLight' : '') + ' list-group-item member '} key={index}>\r\n        <div className={(isMobile ? 'member__actions_visible' : '') +\r\n          ' member__actions '\r\n        }>\r\n          {fieldsLength > 1 && <div>\r\n            <button\r\n              className=\"member__action\"\r\n              type=\"button\"\r\n              onClick={() => fields.move(index, index === 0 ? fieldsLength - 1 : index - 1)}>\r\n              <FontAwesomeIcon icon={faArrowUp} />\r\n            </button>\r\n            <button\r\n              className=\"member__action\"\r\n              type=\"button\"\r\n              onClick={() => fields.move(index, index === fieldsLength - 1 ? 0 : index + 1)}>\r\n              <FontAwesomeIcon icon={faArrowDown} />\r\n            </button>\r\n          </div>}\r\n\r\n          <button\r\n            className=\"member__action\"\r\n            type=\"button\"\r\n            title=\"Remove Member\"\r\n            onClick={() => fields.remove(index)}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n\r\n        <h4>Member #{index + 1}\r\n          <div className=\"border text-secondary px-2 py-2 mt-2\" style={{\r\n            color: 'grey',\r\n            fontSize: '12px'\r\n          }}>{firstName} <br /> {lastName}</div>\r\n        </h4>\r\n        <div style={{ position: 'relative' }}>\r\n          <Field\r\n            blockInput={blockInput}\r\n            name={`${member}.firstName`}\r\n            type=\"text\"\r\n            component={RenderField}\r\n            label=\"First Name\"\r\n          />\r\n          <Field\r\n            blockInput={blockInput}\r\n            name={`${member}.lastName`}\r\n            type=\"text\"\r\n            component={RenderField}\r\n            label=\"Last Name\"\r\n          />\r\n\r\n          <div className=\"mb-2\">\r\n            {hobbies && hobbies.map((b, i) =>\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                key={b + i.toString()}\r\n                href={`https://www.google.com/search?q=${b}`}>\r\n                <span className=\"badge badge-primary mr-1\">{b}</span>\r\n              </a>)}\r\n          </div>\r\n\r\n          <FieldArray\r\n            blockInput={isDragging}\r\n            maxHobbiesLength={maxHobbiesLength}\r\n            name={`${member}.hobbies$`}\r\n            component={RenderHobbies} />\r\n        </div>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Member","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './ShowCaseButton.css'\r\n\r\nconst ShowCaseButton = ({ theme, text, icon, onClick = () => { } }) => {\r\n  return (\r\n    <button className={`show-case-btn_${theme} show-case-btn`} onClick={onClick}>\r\n      {icon && <FontAwesomeIcon icon={icon} />}\r\n      {text && (' ' +text)}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default ShowCaseButton\r\n","import { createSelector } from 'reselect'\r\n\r\nexport const uiState = state => state.ui\r\n\r\nexport const getTheme = createSelector(\r\n  uiState,\r\n  uiState => uiState.theme\r\n)\r\n\r\n","import React, { useState } from 'react'\r\nimport { Modal, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport './ShowCase.css'\r\nimport { connect } from 'react-redux'\r\nimport ShowCaseButton from '../shared/ShowCaseButton/ShowCaseButton';\r\nimport { faFillDrip } from '@fortawesome/free-solid-svg-icons'\r\nimport { getTheme } from '../../store/selectors';\r\nimport { uiChangeThemeInDome } from '../../store/actions';\r\n\r\nconst ShowCase = ({\r\n  component,\r\n  codeListining,\r\n  onChangeTheme,\r\n  title,\r\n  theme\r\n}) => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => {\r\n    setShow(true)\r\n    onChangeTheme(theme)\r\n  }\r\n\r\n  console.log(theme)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Modal\r\n          className=\"show-case\"\r\n          dialogClassName=\"show-case__dialog\"\r\n          show={show}\r\n          onHide={handleClose}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Container fluid>\r\n              <Row>\r\n                <Col xs={11}>\r\n                  <Modal.Title>{title}</Modal.Title>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"show-case__actions\">\r\n                    <ShowCaseButton\r\n                      onClick={() => onChangeTheme(theme === 'prism' ? 'prism-okaidia' : 'prism')}\r\n                      theme={theme}\r\n                      icon={faFillDrip}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"show-case__content\">\r\n              <div className=\"show-case__col\">\r\n                <div className=\"show-case__body\">\r\n                  {component}\r\n                </div>\r\n              </div>\r\n              <div className=\"show-case__col\">\r\n                <div className=\"show-case__body show-case__body_listening\">\r\n                  {codeListining}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n      <div>\r\n        <Button variant=\"secondary\" onClick={handleShow}>Expand</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: getTheme(state)\r\n})\r\n\r\nconst mapStateToDispatch = dispatch => ({\r\n  onChangeTheme: theme => dispatch(uiChangeThemeInDome(theme))\r\n})\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapStateToDispatch\r\n)(ShowCase)\r\n","import React from 'react'\r\n\r\nfunction Wrapper({ children, title }) {\r\n  return (\r\n    <div className=\"col-sm mb-3 mt-3\">\r\n      <div className=\"border px-2 py-2\">\r\n        <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n          {title}\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Wrapper","import React from 'react'\r\nimport 'prismjs'\r\nimport {connect} from 'react-redux'\r\nimport PrismCode from 'react-prism'\r\n\r\nimport { getTheme } from '../../store/selectors'\r\n\r\nexport const availableThemes = ['prism', 'prism-okaidia']\r\n\r\nconst CodeListening = ({\r\n  codeListening,\r\n  lang = 'language-javascript',\r\n  theme }) => {\r\n  // import(`prismjs/themes/${theme}.css`)\r\n  return (\r\n    <PrismCode component=\"pre\" className={lang}>\r\n      {codeListening}\r\n    </PrismCode>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: getTheme  (state)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n  )(CodeListening)\r\n","import React, { useState } from 'react'\r\nimport './App.css'\r\nimport Page from './pages/Page/Page'\r\nimport SyncValidationFormYup from './components/SyncValidationFormYup/SyncValidationFormYup'\r\nimport SimpleForm, { listing as SimpleFormListing } from './components/SimpleForm/SimpleForm'\r\nimport SyncValidationForm from './components/SyncValidationForm/SyncValidationForm'\r\nimport FieldLevelValidation from './components/FieldLevelValidation/FieldLevelValidation'\r\nimport MixedSyncValidation from './components/MixedSyncValidation/MixedSyncValidation'\r\nimport AsyncBlurValidation from './components/AsyncBlurValidation/AsyncBlurValidation'\r\nimport AsyncChangeValidation from './components/AsyncChangeValidation/AsyncChangeValidation'\r\nimport InitializeFromState from './components/InitializeFromState/InitializeFromState'\r\nimport SelectingFormValues from './components/SelectingFormValues/SelectingFormValues'\r\nimport FieldArraysForm from './components/FieldArraysForm/FieldArraysForm'\r\nimport ShowCase from './components/ShowCase/ShowCase'\r\nimport Wrapper from './components/Wrapper/Wrapper'\r\nimport CodeListening from './components/CodeListening/CodeListening'\r\nimport { logger } from './utils'\r\n\r\n\r\nfunction App() {\r\n  const [nicknameRequired, setNicknameRequired] = useState({ nicknameRequired: false })\r\n  const { nicknameRequired: nickRequired } = nicknameRequired\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n\r\n        {/* first */}\r\n        <div className=\"col-sm\">\r\n          <Wrapper title=\"Simple from without validation.\">\r\n            <Page>\r\n              {submit => (<SimpleForm onSubmit={submit} />)}\r\n            </Page>\r\n            <hr />\r\n            <ShowCase\r\n              codeListining={<CodeListening codeListening={SimpleFormListing} />}\r\n              component={<SimpleForm onSubmit={logger} />}\r\n              title=\"Simple from without validation.\"\r\n            />\r\n          </Wrapper>\r\n\r\n          <Wrapper title=\"Initialize from state.\">\r\n            <Page>\r\n              {submit => (<InitializeFromState onSubmit={submit} />)}\r\n            </Page>\r\n            <hr />\r\n          </Wrapper>\r\n        </div>\r\n\r\n        {/* second */}\r\n        <div className=\"col-sm\">\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Simple sync validation.\r\n          </div>\r\n          <Page>\r\n            {submit => (<SyncValidationForm onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Mixed sync validation.(field level and validation fn)\r\n          </div>\r\n          <Page>\r\n            {submit => (<MixedSyncValidation onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Selecting form values, conditional validation with yup and context\r\n          </div>\r\n          <button\r\n            onClick={() => setNicknameRequired(obj => ({ nicknameRequired: !obj.nicknameRequired }))}\r\n            type=\"submit\"\r\n            className=\"btn btn-secondary\">\r\n            Toggle nickname required \"{nickRequired ? 'required' : 'not required'}\"\r\n          </button>\r\n          <Page>\r\n            {submit => (<SelectingFormValues\r\n              context={nicknameRequired}\r\n              onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n        </div>\r\n\r\n        {/* third */}\r\n        <div className=\"col-sm\">\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Simple sync validation with yup.\r\n          </div>\r\n          <Page>\r\n            {submit => (<SyncValidationFormYup onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Async blur validation.(fails on multiple fields validation)\r\n          </div>\r\n          <Page>\r\n            {submit => (<AsyncBlurValidation onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Field arrays form(moving and DnD)\r\n          </div>\r\n          <Page>\r\n            {submit => (<FieldArraysForm maxHobbiesLength=\"5\" onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n        </div>\r\n\r\n        {/* fourth */}\r\n        <div className=\"col-sm\">\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Field level validation.\r\n          </div>\r\n          <Page>\r\n            {submit => (<FieldLevelValidation onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\r\n            Async change validation.(fails on multiple fields validation)\r\n          </div>\r\n          <Page>\r\n            {submit => (<AsyncChangeValidation onSubmit={submit} />)}\r\n          </Page>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { DndProvider } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport TouchBackend from 'react-dnd-touch-backend'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './configureStore'\r\nimport './index.css';\r\nimport App from './App';\r\nimport {\r\n  isMobile\r\n} from \"react-device-detect\";\r\n\r\nconst { store } = configureStore()\r\n\r\nconst AppBundle = (\r\n  <DndProvider backend={isMobile ? TouchBackend : HTML5Backend}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </DndProvider>\r\n)\r\n\r\nReactDOM.render(\r\n  AppBundle,\r\n  document.getElementById('root')\r\n);\r\n","\r\nimport { createStore, applyMiddleware, /*compose*/ } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './store/reducers'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nexport default function configureStore(initialState = {}) {\r\n  const middlewares = [thunk]\r\n\r\n  return {\r\n    store: createStore(\r\n      reducer,\r\n      initialState,\r\n      composeWithDevTools(\r\n        applyMiddleware(...middlewares)\r\n      )\r\n    )\r\n  }\r\n}"],"sourceRoot":""}